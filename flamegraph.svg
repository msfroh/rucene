<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="486" onload="init(evt)" viewBox="0 0 1200 486" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="486" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="469.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="469.00"> </text><svg id="frames" x="10" width="1180" total_samples="93763"><g><title>entry_SYSCALL_64 (13 samples, 0.01%)</title><rect x="0.0661%" y="293" width="0.0139%" height="15" fill="rgb(227,0,7)" fg:x="62" fg:w="13"/><text x="0.3161%" y="303.50"></text></g><g><title>__hrtimer_start_range_ns (11 samples, 0.01%)</title><rect x="0.1013%" y="197" width="0.0117%" height="15" fill="rgb(217,0,24)" fg:x="95" fg:w="11"/><text x="0.3513%" y="207.50"></text></g><g><title>hrtimer_start_range_ns (13 samples, 0.01%)</title><rect x="0.1013%" y="213" width="0.0139%" height="15" fill="rgb(221,193,54)" fg:x="95" fg:w="13"/><text x="0.3513%" y="223.50"></text></g><g><title>dequeue_task_fair (25 samples, 0.03%)</title><rect x="0.1205%" y="181" width="0.0267%" height="15" fill="rgb(248,212,6)" fg:x="113" fg:w="25"/><text x="0.3705%" y="191.50"></text></g><g><title>dequeue_entity (21 samples, 0.02%)</title><rect x="0.1248%" y="165" width="0.0224%" height="15" fill="rgb(208,68,35)" fg:x="117" fg:w="21"/><text x="0.3748%" y="175.50"></text></g><g><title>__perf_event_task_sched_in (3,051 samples, 3.25%)</title><rect x="0.1621%" y="165" width="3.2539%" height="15" fill="rgb(232,128,0)" fg:x="152" fg:w="3051"/><text x="0.4121%" y="175.50">__p..</text></g><g><title>perf_event_context_sched_in (3,050 samples, 3.25%)</title><rect x="0.1632%" y="149" width="3.2529%" height="15" fill="rgb(207,160,47)" fg:x="153" fg:w="3050"/><text x="0.4132%" y="159.50">per..</text></g><g><title>__intel_pmu_enable_all.constprop.0 (3,048 samples, 3.25%)</title><rect x="0.1653%" y="133" width="3.2507%" height="15" fill="rgb(228,23,34)" fg:x="155" fg:w="3048"/><text x="0.4153%" y="143.50">__i..</text></g><g><title>__hrtimer_run_queues (10 samples, 0.01%)</title><rect x="3.4171%" y="85" width="0.0107%" height="15" fill="rgb(218,30,26)" fg:x="3204" fg:w="10"/><text x="3.6671%" y="95.50"></text></g><g><title>asm_call_sysvec_on_stack (12 samples, 0.01%)</title><rect x="3.4171%" y="133" width="0.0128%" height="15" fill="rgb(220,122,19)" fg:x="3204" fg:w="12"/><text x="3.6671%" y="143.50"></text></g><g><title>__sysvec_apic_timer_interrupt (12 samples, 0.01%)</title><rect x="3.4171%" y="117" width="0.0128%" height="15" fill="rgb(250,228,42)" fg:x="3204" fg:w="12"/><text x="3.6671%" y="127.50"></text></g><g><title>hrtimer_interrupt (12 samples, 0.01%)</title><rect x="3.4171%" y="101" width="0.0128%" height="15" fill="rgb(240,193,28)" fg:x="3204" fg:w="12"/><text x="3.6671%" y="111.50"></text></g><g><title>finish_task_switch (3,094 samples, 3.30%)</title><rect x="0.1472%" y="181" width="3.2998%" height="15" fill="rgb(216,20,37)" fg:x="138" fg:w="3094"/><text x="0.3972%" y="191.50">fin..</text></g><g><title>asm_sysvec_apic_timer_interrupt (29 samples, 0.03%)</title><rect x="3.4161%" y="165" width="0.0309%" height="15" fill="rgb(206,188,39)" fg:x="3203" fg:w="29"/><text x="3.6661%" y="175.50"></text></g><g><title>sysvec_apic_timer_interrupt (28 samples, 0.03%)</title><rect x="3.4171%" y="149" width="0.0299%" height="15" fill="rgb(217,207,13)" fg:x="3204" fg:w="28"/><text x="3.6671%" y="159.50"></text></g><g><title>irq_exit_rcu (16 samples, 0.02%)</title><rect x="3.4299%" y="133" width="0.0171%" height="15" fill="rgb(231,73,38)" fg:x="3216" fg:w="16"/><text x="3.6799%" y="143.50"></text></g><g><title>do_softirq_own_stack (16 samples, 0.02%)</title><rect x="3.4299%" y="117" width="0.0171%" height="15" fill="rgb(225,20,46)" fg:x="3216" fg:w="16"/><text x="3.6799%" y="127.50"></text></g><g><title>asm_call_sysvec_on_stack (16 samples, 0.02%)</title><rect x="3.4299%" y="101" width="0.0171%" height="15" fill="rgb(210,31,41)" fg:x="3216" fg:w="16"/><text x="3.6799%" y="111.50"></text></g><g><title>__softirqentry_text_start (16 samples, 0.02%)</title><rect x="3.4299%" y="85" width="0.0171%" height="15" fill="rgb(221,200,47)" fg:x="3216" fg:w="16"/><text x="3.6799%" y="95.50"></text></g><g><title>run_rebalance_domains (12 samples, 0.01%)</title><rect x="3.4342%" y="69" width="0.0128%" height="15" fill="rgb(226,26,5)" fg:x="3220" fg:w="12"/><text x="3.6842%" y="79.50"></text></g><g><title>update_blocked_averages (12 samples, 0.01%)</title><rect x="3.4342%" y="53" width="0.0128%" height="15" fill="rgb(249,33,26)" fg:x="3220" fg:w="12"/><text x="3.6842%" y="63.50"></text></g><g><title>update_blocked_averages (14 samples, 0.01%)</title><rect x="3.4577%" y="117" width="0.0149%" height="15" fill="rgb(235,183,28)" fg:x="3242" fg:w="14"/><text x="3.7077%" y="127.50"></text></g><g><title>pick_next_task_fair (26 samples, 0.03%)</title><rect x="3.4470%" y="181" width="0.0277%" height="15" fill="rgb(221,5,38)" fg:x="3232" fg:w="26"/><text x="3.6970%" y="191.50"></text></g><g><title>newidle_balance (26 samples, 0.03%)</title><rect x="3.4470%" y="165" width="0.0277%" height="15" fill="rgb(247,18,42)" fg:x="3232" fg:w="26"/><text x="3.6970%" y="175.50"></text></g><g><title>nohz_newidle_balance (22 samples, 0.02%)</title><rect x="3.4513%" y="149" width="0.0235%" height="15" fill="rgb(241,131,45)" fg:x="3236" fg:w="22"/><text x="3.7013%" y="159.50"></text></g><g><title>_nohz_idle_balance (21 samples, 0.02%)</title><rect x="3.4523%" y="133" width="0.0224%" height="15" fill="rgb(249,31,29)" fg:x="3237" fg:w="21"/><text x="3.7023%" y="143.50"></text></g><g><title>prepare_task_switch (11 samples, 0.01%)</title><rect x="3.4779%" y="181" width="0.0117%" height="15" fill="rgb(225,111,53)" fg:x="3261" fg:w="11"/><text x="3.7279%" y="191.50"></text></g><g><title>__perf_event_task_sched_out (11 samples, 0.01%)</title><rect x="3.4779%" y="165" width="0.0117%" height="15" fill="rgb(238,160,17)" fg:x="3261" fg:w="11"/><text x="3.7279%" y="175.50"></text></g><g><title>perf_event_context_sched_out (10 samples, 0.01%)</title><rect x="3.4790%" y="149" width="0.0107%" height="15" fill="rgb(214,148,48)" fg:x="3262" fg:w="10"/><text x="3.7290%" y="159.50"></text></g><g><title>do_nanosleep (3,195 samples, 3.41%)</title><rect x="0.0992%" y="229" width="3.4075%" height="15" fill="rgb(232,36,49)" fg:x="93" fg:w="3195"/><text x="0.3492%" y="239.50">do_..</text></g><g><title>schedule (3,180 samples, 3.39%)</title><rect x="0.1152%" y="213" width="3.3915%" height="15" fill="rgb(209,103,24)" fg:x="108" fg:w="3180"/><text x="0.3652%" y="223.50">sch..</text></g><g><title>__schedule (3,179 samples, 3.39%)</title><rect x="0.1163%" y="197" width="3.3905%" height="15" fill="rgb(229,88,8)" fg:x="109" fg:w="3179"/><text x="0.3663%" y="207.50">__s..</text></g><g><title>__x64_sys_nanosleep (3,211 samples, 3.42%)</title><rect x="0.0843%" y="261" width="3.4246%" height="15" fill="rgb(213,181,19)" fg:x="79" fg:w="3211"/><text x="0.3343%" y="271.50">__x..</text></g><g><title>hrtimer_nanosleep (3,202 samples, 3.41%)</title><rect x="0.0939%" y="245" width="3.4150%" height="15" fill="rgb(254,191,54)" fg:x="88" fg:w="3202"/><text x="0.3439%" y="255.50">hrt..</text></g><g><title>do_syscall_64 (3,218 samples, 3.43%)</title><rect x="0.0821%" y="277" width="3.4321%" height="15" fill="rgb(241,83,37)" fg:x="77" fg:w="3218"/><text x="0.3321%" y="287.50">do_..</text></g><g><title>entry_SYSCALL_64_after_hwframe (3,243 samples, 3.46%)</title><rect x="0.0800%" y="293" width="3.4587%" height="15" fill="rgb(233,36,39)" fg:x="75" fg:w="3243"/><text x="0.3300%" y="303.50">ent..</text></g><g><title>syscall_exit_to_user_mode (23 samples, 0.02%)</title><rect x="3.5142%" y="277" width="0.0245%" height="15" fill="rgb(226,3,54)" fg:x="3295" fg:w="23"/><text x="3.7642%" y="287.50"></text></g><g><title>exit_to_user_mode_prepare (14 samples, 0.01%)</title><rect x="3.5238%" y="261" width="0.0149%" height="15" fill="rgb(245,192,40)" fg:x="3304" fg:w="14"/><text x="3.7738%" y="271.50"></text></g><g><title>switch_fpu_return (13 samples, 0.01%)</title><rect x="3.5248%" y="245" width="0.0139%" height="15" fill="rgb(238,167,29)" fg:x="3305" fg:w="13"/><text x="3.7748%" y="255.50"></text></g><g><title>__GI___clone (3,319 samples, 3.54%)</title><rect x="0.0043%" y="405" width="3.5398%" height="15" fill="rgb(232,182,51)" fg:x="4" fg:w="3319"/><text x="0.2543%" y="415.50">__G..</text></g><g><title>start_thread (3,311 samples, 3.53%)</title><rect x="0.0128%" y="389" width="3.5312%" height="15" fill="rgb(231,60,39)" fg:x="12" fg:w="3311"/><text x="0.2628%" y="399.50">sta..</text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (3,311 samples, 3.53%)</title><rect x="0.0128%" y="373" width="3.5312%" height="15" fill="rgb(208,69,12)" fg:x="12" fg:w="3311"/><text x="0.2628%" y="383.50">std..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (3,311 samples, 3.53%)</title><rect x="0.0128%" y="357" width="3.5312%" height="15" fill="rgb(235,93,37)" fg:x="12" fg:w="3311"/><text x="0.2628%" y="367.50">cor..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (3,311 samples, 3.53%)</title><rect x="0.0128%" y="341" width="3.5312%" height="15" fill="rgb(213,116,39)" fg:x="12" fg:w="3311"/><text x="0.2628%" y="351.50">std..</text></g><g><title>std::thread::sleep (3,283 samples, 3.50%)</title><rect x="0.0427%" y="325" width="3.5014%" height="15" fill="rgb(222,207,29)" fg:x="40" fg:w="3283"/><text x="0.2927%" y="335.50">std..</text></g><g><title>__GI___nanosleep (3,278 samples, 3.50%)</title><rect x="0.0480%" y="309" width="3.4960%" height="15" fill="rgb(206,96,30)" fg:x="45" fg:w="3278"/><text x="0.2980%" y="319.50">__G..</text></g><g><title>__libc_start_main (42 samples, 0.04%)</title><rect x="3.5472%" y="405" width="0.0448%" height="15" fill="rgb(218,138,4)" fg:x="3326" fg:w="42"/><text x="3.7972%" y="415.50"></text></g><g><title>main (42 samples, 0.04%)</title><rect x="3.5472%" y="389" width="0.0448%" height="15" fill="rgb(250,191,14)" fg:x="3326" fg:w="42"/><text x="3.7972%" y="399.50"></text></g><g><title>std::rt::lang_start_internal (42 samples, 0.04%)</title><rect x="3.5472%" y="373" width="0.0448%" height="15" fill="rgb(239,60,40)" fg:x="3326" fg:w="42"/><text x="3.7972%" y="383.50"></text></g><g><title>std::rt::lang_start::_{{closure}} (42 samples, 0.04%)</title><rect x="3.5472%" y="357" width="0.0448%" height="15" fill="rgb(206,27,48)" fg:x="3326" fg:w="42"/><text x="3.7972%" y="367.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (42 samples, 0.04%)</title><rect x="3.5472%" y="341" width="0.0448%" height="15" fill="rgb(225,35,8)" fg:x="3326" fg:w="42"/><text x="3.7972%" y="351.50"></text></g><g><title>basic_points_range::main (42 samples, 0.04%)</title><rect x="3.5472%" y="325" width="0.0448%" height="15" fill="rgb(250,213,24)" fg:x="3326" fg:w="42"/><text x="3.7972%" y="335.50"></text></g><g><title>rucene::core::index::writer::index_writer::IndexWriterInner&lt;D,C,MS,MP&gt;::update_document (42 samples, 0.04%)</title><rect x="3.5472%" y="309" width="0.0448%" height="15" fill="rgb(247,123,22)" fg:x="3326" fg:w="42"/><text x="3.7972%" y="319.50"></text></g><g><title>rucene::core::index::writer::doc_writer::DocumentsWriter&lt;D,C,MS,MP&gt;::update_document (42 samples, 0.04%)</title><rect x="3.5472%" y="293" width="0.0448%" height="15" fill="rgb(231,138,38)" fg:x="3326" fg:w="42"/><text x="3.7972%" y="303.50"></text></g><g><title>rucene::core::index::writer::doc_writer_per_thread::DocumentsWriterPerThread&lt;D,C,MS,MP&gt;::update_document (42 samples, 0.04%)</title><rect x="3.5472%" y="277" width="0.0448%" height="15" fill="rgb(231,145,46)" fg:x="3326" fg:w="42"/><text x="3.7972%" y="287.50"></text></g><g><title>rucene::core::index::writer::doc_consumer::DocConsumer&lt;D,C,MS,MP&gt;::process_document (42 samples, 0.04%)</title><rect x="3.5472%" y="261" width="0.0448%" height="15" fill="rgb(251,118,11)" fg:x="3326" fg:w="42"/><text x="3.7972%" y="271.50"></text></g><g><title>rucene::core::index::writer::doc_consumer::DocConsumer&lt;D,C,MS,MP&gt;::get_or_add_field (42 samples, 0.04%)</title><rect x="3.5472%" y="245" width="0.0448%" height="15" fill="rgb(217,147,25)" fg:x="3326" fg:w="42"/><text x="3.7972%" y="255.50"></text></g><g><title>&lt;rucene::core::codec::points::points_reader::Lucene60PointsReader as rucene::core::codec::points::point_values::PointValues&gt;::doc_count (28 samples, 0.03%)</title><rect x="3.7883%" y="277" width="0.0299%" height="15" fill="rgb(247,81,37)" fg:x="3552" fg:w="28"/><text x="4.0383%" y="287.50"></text></g><g><title>rucene::core::codec::points::points_reader::Lucene60PointsReader::bkd_reader (27 samples, 0.03%)</title><rect x="3.7893%" y="261" width="0.0288%" height="15" fill="rgb(209,12,38)" fg:x="3553" fg:w="27"/><text x="4.0393%" y="271.50"></text></g><g><title>&lt;rucene::core::codec::points::points_reader::Lucene60PointsReader as rucene::core::codec::points::point_values::PointValues&gt;::max_packed_value (11 samples, 0.01%)</title><rect x="3.8181%" y="277" width="0.0117%" height="15" fill="rgb(227,1,9)" fg:x="3580" fg:w="11"/><text x="4.0681%" y="287.50"></text></g><g><title>rucene::core::codec::field_infos::FieldInfos::field_info_by_name (12 samples, 0.01%)</title><rect x="3.8608%" y="277" width="0.0128%" height="15" fill="rgb(248,47,43)" fg:x="3620" fg:w="12"/><text x="4.1108%" y="287.50"></text></g><g><title>__calloc (30 samples, 0.03%)</title><rect x="3.9003%" y="261" width="0.0320%" height="15" fill="rgb(221,10,30)" fg:x="3657" fg:w="30"/><text x="4.1503%" y="271.50"></text></g><g><title>_int_malloc (12 samples, 0.01%)</title><rect x="3.9195%" y="245" width="0.0128%" height="15" fill="rgb(210,229,1)" fg:x="3675" fg:w="12"/><text x="4.1695%" y="255.50"></text></g><g><title>_int_free (20 samples, 0.02%)</title><rect x="3.9355%" y="245" width="0.0213%" height="15" fill="rgb(222,148,37)" fg:x="3690" fg:w="20"/><text x="4.1855%" y="255.50"></text></g><g><title>__GI___libc_free (18 samples, 0.02%)</title><rect x="3.9643%" y="229" width="0.0192%" height="15" fill="rgb(234,67,33)" fg:x="3717" fg:w="18"/><text x="4.2143%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;rucene::core::util::bkd::bkd_reader::IntersectState&lt;rucene::core::util::bkd::bkd_reader::StubIntersectVisitor&gt;&gt; (108 samples, 0.12%)</title><rect x="3.9344%" y="261" width="0.1152%" height="15" fill="rgb(247,98,35)" fg:x="3689" fg:w="108"/><text x="4.1844%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;rucene::core::util::bkd::bkd_reader::PackedIndexTree&gt; (86 samples, 0.09%)</title><rect x="3.9579%" y="245" width="0.0917%" height="15" fill="rgb(247,138,52)" fg:x="3711" fg:w="86"/><text x="4.2079%" y="255.50"></text></g><g><title>_int_free (59 samples, 0.06%)</title><rect x="3.9866%" y="229" width="0.0629%" height="15" fill="rgb(213,79,30)" fg:x="3738" fg:w="59"/><text x="4.2366%" y="239.50"></text></g><g><title>&lt;rucene::core::util::bkd::bkd_reader::PackedIndexTree as rucene::core::util::bkd::bkd_reader::IndexTree&gt;::push_left (18 samples, 0.02%)</title><rect x="4.0549%" y="245" width="0.0192%" height="15" fill="rgb(246,177,23)" fg:x="3802" fg:w="18"/><text x="4.3049%" y="255.50"></text></g><g><title>&lt;rucene::core::util::bkd::bkd_reader::PackedIndexTree as rucene::core::util::bkd::bkd_reader::IndexTree&gt;::push_right (16 samples, 0.02%)</title><rect x="4.0741%" y="245" width="0.0171%" height="15" fill="rgb(230,62,27)" fg:x="3820" fg:w="16"/><text x="4.3241%" y="255.50"></text></g><g><title>rucene::core::util::bkd::bkd_reader::PackedIndexTree::read_node_data (12 samples, 0.01%)</title><rect x="4.0784%" y="229" width="0.0128%" height="15" fill="rgb(216,154,8)" fg:x="3824" fg:w="12"/><text x="4.3284%" y="239.50"></text></g><g><title>&lt;rucene::core::util::bkd::bkd_reader::PackedIndexTree as rucene::core::util::bkd::bkd_reader::IndexTree&gt;::split_dim_value (10 samples, 0.01%)</title><rect x="4.0922%" y="245" width="0.0107%" height="15" fill="rgb(244,35,45)" fg:x="3837" fg:w="10"/><text x="4.3422%" y="255.50"></text></g><g><title>__GI___libc_malloc (10 samples, 0.01%)</title><rect x="4.0922%" y="229" width="0.0107%" height="15" fill="rgb(251,115,12)" fg:x="3837" fg:w="10"/><text x="4.3422%" y="239.50"></text></g><g><title>&lt;rucene::core::util::bkd::bkd_reader::PackedIndexTree as rucene::core::util::bkd::bkd_reader::IndexTree&gt;::split_packed_value (11 samples, 0.01%)</title><rect x="4.1029%" y="245" width="0.0117%" height="15" fill="rgb(240,54,50)" fg:x="3847" fg:w="11"/><text x="4.3529%" y="255.50"></text></g><g><title>__GI___libc_malloc (11 samples, 0.01%)</title><rect x="4.1029%" y="229" width="0.0117%" height="15" fill="rgb(233,84,52)" fg:x="3847" fg:w="11"/><text x="4.3529%" y="239.50"></text></g><g><title>__GI___libc_malloc (10 samples, 0.01%)</title><rect x="4.1328%" y="213" width="0.0107%" height="15" fill="rgb(207,117,47)" fg:x="3875" fg:w="10"/><text x="4.3828%" y="223.50"></text></g><g><title>&lt;rucene::core::util::bkd::bkd_reader::PackedIndexTree as rucene::core::util::bkd::bkd_reader::IndexTree&gt;::push_left (23 samples, 0.02%)</title><rect x="4.1296%" y="229" width="0.0245%" height="15" fill="rgb(249,43,39)" fg:x="3872" fg:w="23"/><text x="4.3796%" y="239.50"></text></g><g><title>&lt;rucene::core::util::bkd::bkd_reader::PackedIndexTree as rucene::core::util::bkd::bkd_reader::IndexTree&gt;::push_right (16 samples, 0.02%)</title><rect x="4.1541%" y="229" width="0.0171%" height="15" fill="rgb(209,38,44)" fg:x="3895" fg:w="16"/><text x="4.4041%" y="239.50"></text></g><g><title>rucene::core::util::bkd::bkd_reader::PackedIndexTree::read_node_data (10 samples, 0.01%)</title><rect x="4.1605%" y="213" width="0.0107%" height="15" fill="rgb(236,212,23)" fg:x="3901" fg:w="10"/><text x="4.4105%" y="223.50"></text></g><g><title>__GI___libc_malloc (12 samples, 0.01%)</title><rect x="4.2000%" y="197" width="0.0128%" height="15" fill="rgb(242,79,21)" fg:x="3938" fg:w="12"/><text x="4.4500%" y="207.50"></text></g><g><title>&lt;rucene::core::util::bkd::bkd_reader::PackedIndexTree as rucene::core::util::bkd::bkd_reader::IndexTree&gt;::push_left (21 samples, 0.02%)</title><rect x="4.1978%" y="213" width="0.0224%" height="15" fill="rgb(211,96,35)" fg:x="3936" fg:w="21"/><text x="4.4478%" y="223.50"></text></g><g><title>&lt;rucene::core::util::bkd::bkd_reader::PackedIndexTree as rucene::core::util::bkd::bkd_reader::IndexTree&gt;::push_right (18 samples, 0.02%)</title><rect x="4.2202%" y="213" width="0.0192%" height="15" fill="rgb(253,215,40)" fg:x="3957" fg:w="18"/><text x="4.4702%" y="223.50"></text></g><g><title>rucene::core::util::bkd::bkd_reader::PackedIndexTree::read_node_data (10 samples, 0.01%)</title><rect x="4.2287%" y="197" width="0.0107%" height="15" fill="rgb(211,81,21)" fg:x="3965" fg:w="10"/><text x="4.4787%" y="207.50"></text></g><g><title>&lt;rucene::core::util::bkd::bkd_reader::PackedIndexTree as rucene::core::util::bkd::bkd_reader::IndexTree&gt;::split_packed_value (11 samples, 0.01%)</title><rect x="4.2437%" y="213" width="0.0117%" height="15" fill="rgb(208,190,38)" fg:x="3979" fg:w="11"/><text x="4.4937%" y="223.50"></text></g><g><title>&lt;rucene::core::util::bkd::bkd_reader::PackedIndexTree as rucene::core::util::bkd::bkd_reader::IndexTree&gt;::push_left (23 samples, 0.02%)</title><rect x="4.2725%" y="197" width="0.0245%" height="15" fill="rgb(235,213,38)" fg:x="4006" fg:w="23"/><text x="4.5225%" y="207.50"></text></g><g><title>rucene::core::util::bkd::bkd_reader::PackedIndexTree::read_node_data (13 samples, 0.01%)</title><rect x="4.2831%" y="181" width="0.0139%" height="15" fill="rgb(237,122,38)" fg:x="4016" fg:w="13"/><text x="4.5331%" y="191.50"></text></g><g><title>&lt;rucene::core::util::bkd::bkd_reader::PackedIndexTree as rucene::core::util::bkd::bkd_reader::IndexTree&gt;::push_right (19 samples, 0.02%)</title><rect x="4.2970%" y="197" width="0.0203%" height="15" fill="rgb(244,218,35)" fg:x="4029" fg:w="19"/><text x="4.5470%" y="207.50"></text></g><g><title>rucene::core::util::bkd::bkd_reader::PackedIndexTree::read_node_data (11 samples, 0.01%)</title><rect x="4.3055%" y="181" width="0.0117%" height="15" fill="rgb(240,68,47)" fg:x="4037" fg:w="11"/><text x="4.5555%" y="191.50"></text></g><g><title>&lt;rucene::core::util::bkd::bkd_reader::PackedIndexTree as rucene::core::util::bkd::bkd_reader::IndexTree&gt;::push_left (18 samples, 0.02%)</title><rect x="4.3493%" y="181" width="0.0192%" height="15" fill="rgb(210,16,53)" fg:x="4078" fg:w="18"/><text x="4.5993%" y="191.50"></text></g><g><title>&lt;rucene::core::util::bkd::bkd_reader::PackedIndexTree as rucene::core::util::bkd::bkd_reader::IndexTree&gt;::push_right (26 samples, 0.03%)</title><rect x="4.3685%" y="181" width="0.0277%" height="15" fill="rgb(235,124,12)" fg:x="4096" fg:w="26"/><text x="4.6185%" y="191.50"></text></g><g><title>rucene::core::util::bkd::bkd_reader::PackedIndexTree::read_node_data (21 samples, 0.02%)</title><rect x="4.3738%" y="165" width="0.0224%" height="15" fill="rgb(224,169,11)" fg:x="4101" fg:w="21"/><text x="4.6238%" y="175.50"></text></g><g><title>__GI___libc_malloc (11 samples, 0.01%)</title><rect x="4.4026%" y="165" width="0.0117%" height="15" fill="rgb(250,166,2)" fg:x="4128" fg:w="11"/><text x="4.6526%" y="175.50"></text></g><g><title>&lt;rucene::core::util::bkd::bkd_reader::PackedIndexTree as rucene::core::util::bkd::bkd_reader::IndexTree&gt;::split_packed_value (12 samples, 0.01%)</title><rect x="4.4026%" y="181" width="0.0128%" height="15" fill="rgb(242,216,29)" fg:x="4128" fg:w="12"/><text x="4.6526%" y="191.50"></text></g><g><title>&lt;rucene::core::search::query::point_range_query::PointRangeIntersectVisitor as rucene::core::codec::points::point_values::IntersectVisitor&gt;::visit (248 samples, 0.26%)</title><rect x="4.5882%" y="53" width="0.2645%" height="15" fill="rgb(230,116,27)" fg:x="4302" fg:w="248"/><text x="4.8382%" y="63.50"></text></g><g><title>rucene::core::util::bkd::doc_ids_writer::DocIdsWriter::read_ints_with_visitor (618 samples, 0.66%)</title><rect x="4.4666%" y="69" width="0.6591%" height="15" fill="rgb(228,99,48)" fg:x="4188" fg:w="618"/><text x="4.7166%" y="79.50"></text></g><g><title>rucene::core::store::io::data_input::DataInput::read_long (256 samples, 0.27%)</title><rect x="4.8527%" y="53" width="0.2730%" height="15" fill="rgb(253,11,6)" fg:x="4550" fg:w="256"/><text x="5.1027%" y="63.50"></text></g><g><title>__memmove_avx_unaligned_erms (61 samples, 0.07%)</title><rect x="5.0606%" y="37" width="0.0651%" height="15" fill="rgb(247,143,39)" fg:x="4745" fg:w="61"/><text x="5.3106%" y="47.50"></text></g><g><title>rucene::core::util::bkd::bkd_reader::BKDReader::add_all (632 samples, 0.67%)</title><rect x="4.4580%" y="85" width="0.6740%" height="15" fill="rgb(236,97,10)" fg:x="4180" fg:w="632"/><text x="4.7080%" y="95.50"></text></g><g><title>&lt;rucene::core::search::query::point_range_query::PointRangeIntersectVisitor as rucene::core::codec::points::point_values::IntersectVisitor&gt;::visit (88 samples, 0.09%)</title><rect x="5.1939%" y="69" width="0.0939%" height="15" fill="rgb(233,208,19)" fg:x="4870" fg:w="88"/><text x="5.4439%" y="79.50"></text></g><g><title>rucene::core::util::bkd::bkd_reader::BKDReader::add_all (898 samples, 0.96%)</title><rect x="4.4303%" y="181" width="0.9577%" height="15" fill="rgb(216,164,2)" fg:x="4154" fg:w="898"/><text x="4.6803%" y="191.50"></text></g><g><title>rucene::core::util::bkd::bkd_reader::BKDReader::add_all (897 samples, 0.96%)</title><rect x="4.4314%" y="165" width="0.9567%" height="15" fill="rgb(220,129,5)" fg:x="4155" fg:w="897"/><text x="4.6814%" y="175.50"></text></g><g><title>rucene::core::util::bkd::bkd_reader::BKDReader::add_all (896 samples, 0.96%)</title><rect x="4.4325%" y="149" width="0.9556%" height="15" fill="rgb(242,17,10)" fg:x="4156" fg:w="896"/><text x="4.6825%" y="159.50"></text></g><g><title>rucene::core::util::bkd::bkd_reader::BKDReader::add_all (895 samples, 0.95%)</title><rect x="4.4335%" y="133" width="0.9545%" height="15" fill="rgb(242,107,0)" fg:x="4157" fg:w="895"/><text x="4.6835%" y="143.50"></text></g><g><title>rucene::core::util::bkd::bkd_reader::BKDReader::add_all (888 samples, 0.95%)</title><rect x="4.4410%" y="117" width="0.9471%" height="15" fill="rgb(251,28,31)" fg:x="4164" fg:w="888"/><text x="4.6910%" y="127.50"></text></g><g><title>rucene::core::util::bkd::bkd_reader::BKDReader::add_all (884 samples, 0.94%)</title><rect x="4.4453%" y="101" width="0.9428%" height="15" fill="rgb(233,223,10)" fg:x="4168" fg:w="884"/><text x="4.6953%" y="111.50"></text></g><g><title>rucene::core::util::bkd::doc_ids_writer::DocIdsWriter::read_ints_with_visitor (240 samples, 0.26%)</title><rect x="5.1321%" y="85" width="0.2560%" height="15" fill="rgb(215,21,27)" fg:x="4812" fg:w="240"/><text x="5.3821%" y="95.50"></text></g><g><title>rucene::core::store::io::data_input::DataInput::read_long (94 samples, 0.10%)</title><rect x="5.2878%" y="69" width="0.1003%" height="15" fill="rgb(232,23,21)" fg:x="4958" fg:w="94"/><text x="5.5378%" y="79.50"></text></g><g><title>__memmove_avx_unaligned_erms (16 samples, 0.02%)</title><rect x="5.3710%" y="53" width="0.0171%" height="15" fill="rgb(244,5,23)" fg:x="5036" fg:w="16"/><text x="5.6210%" y="63.50"></text></g><g><title>__GI___libc_malloc (10 samples, 0.01%)</title><rect x="5.4062%" y="149" width="0.0107%" height="15" fill="rgb(226,81,46)" fg:x="5069" fg:w="10"/><text x="5.6562%" y="159.50"></text></g><g><title>&lt;rucene::core::util::bkd::bkd_reader::PackedIndexTree as rucene::core::util::bkd::bkd_reader::IndexTree&gt;::push_left (28 samples, 0.03%)</title><rect x="5.4019%" y="165" width="0.0299%" height="15" fill="rgb(247,70,30)" fg:x="5065" fg:w="28"/><text x="5.6519%" y="175.50"></text></g><g><title>rucene::core::util::bkd::bkd_reader::PackedIndexTree::read_node_data (13 samples, 0.01%)</title><rect x="5.4179%" y="149" width="0.0139%" height="15" fill="rgb(212,68,19)" fg:x="5080" fg:w="13"/><text x="5.6679%" y="159.50"></text></g><g><title>&lt;rucene::core::util::bkd::bkd_reader::PackedIndexTree as rucene::core::util::bkd::bkd_reader::IndexTree&gt;::push_right (25 samples, 0.03%)</title><rect x="5.4318%" y="165" width="0.0267%" height="15" fill="rgb(240,187,13)" fg:x="5093" fg:w="25"/><text x="5.6818%" y="175.50"></text></g><g><title>rucene::core::util::bkd::bkd_reader::PackedIndexTree::read_node_data (18 samples, 0.02%)</title><rect x="5.4392%" y="149" width="0.0192%" height="15" fill="rgb(223,113,26)" fg:x="5100" fg:w="18"/><text x="5.6892%" y="159.50"></text></g><g><title>&lt;rucene::core::util::bkd::bkd_reader::PackedIndexTree as rucene::core::util::bkd::bkd_reader::IndexTree&gt;::split_packed_value (11 samples, 0.01%)</title><rect x="5.4648%" y="165" width="0.0117%" height="15" fill="rgb(206,192,2)" fg:x="5124" fg:w="11"/><text x="5.7148%" y="175.50"></text></g><g><title>__GI___libc_malloc (10 samples, 0.01%)</title><rect x="5.4659%" y="149" width="0.0107%" height="15" fill="rgb(241,108,4)" fg:x="5125" fg:w="10"/><text x="5.7159%" y="159.50"></text></g><g><title>&lt;rucene::core::util::bkd::bkd_reader::PackedIndexTree as rucene::core::util::bkd::bkd_reader::IndexTree&gt;::push_right (11 samples, 0.01%)</title><rect x="5.5000%" y="133" width="0.0117%" height="15" fill="rgb(247,173,49)" fg:x="5157" fg:w="11"/><text x="5.7500%" y="143.50"></text></g><g><title>&lt;rucene::core::util::bkd::bkd_reader::PackedIndexTree as rucene::core::util::bkd::bkd_reader::IndexTree&gt;::push_right (15 samples, 0.02%)</title><rect x="5.5224%" y="117" width="0.0160%" height="15" fill="rgb(224,114,35)" fg:x="5178" fg:w="15"/><text x="5.7724%" y="127.50"></text></g><g><title>&lt;rucene::core::util::bkd::bkd_reader::PackedIndexTree as rucene::core::util::bkd::bkd_reader::IndexTree&gt;::push_left (18 samples, 0.02%)</title><rect x="5.5395%" y="101" width="0.0192%" height="15" fill="rgb(245,159,27)" fg:x="5194" fg:w="18"/><text x="5.7895%" y="111.50"></text></g><g><title>&lt;rucene::core::util::bkd::bkd_reader::PackedIndexTree as rucene::core::util::bkd::bkd_reader::IndexTree&gt;::push_right (14 samples, 0.01%)</title><rect x="5.5587%" y="101" width="0.0149%" height="15" fill="rgb(245,172,44)" fg:x="5212" fg:w="14"/><text x="5.8087%" y="111.50"></text></g><g><title>rucene::core::util::bkd::bkd_reader::PackedIndexTree::read_node_data (11 samples, 0.01%)</title><rect x="5.5619%" y="85" width="0.0117%" height="15" fill="rgb(236,23,11)" fg:x="5215" fg:w="11"/><text x="5.8119%" y="95.50"></text></g><g><title>&lt;rucene::core::util::bkd::bkd_reader::PackedIndexTree as rucene::core::util::bkd::bkd_reader::IndexTree&gt;::pop (13 samples, 0.01%)</title><rect x="5.5875%" y="85" width="0.0139%" height="15" fill="rgb(205,117,38)" fg:x="5239" fg:w="13"/><text x="5.8375%" y="95.50"></text></g><g><title>&lt;rucene::core::util::bkd::bkd_reader::PackedIndexTree as rucene::core::util::bkd::bkd_reader::IndexTree&gt;::push_left (17 samples, 0.02%)</title><rect x="5.6014%" y="85" width="0.0181%" height="15" fill="rgb(237,72,25)" fg:x="5252" fg:w="17"/><text x="5.8514%" y="95.50"></text></g><g><title>&lt;rucene::core::util::bkd::bkd_reader::PackedIndexTree as rucene::core::util::bkd::bkd_reader::IndexTree&gt;::push_right (24 samples, 0.03%)</title><rect x="5.6195%" y="85" width="0.0256%" height="15" fill="rgb(244,70,9)" fg:x="5269" fg:w="24"/><text x="5.8695%" y="95.50"></text></g><g><title>rucene::core::store::io::data_input::DataInput::read_vint (56 samples, 0.06%)</title><rect x="5.6685%" y="69" width="0.0597%" height="15" fill="rgb(217,125,39)" fg:x="5315" fg:w="56"/><text x="5.9185%" y="79.50"></text></g><g><title>&lt;rucene::core::search::query::point_range_query::PointRangeIntersectVisitor as rucene::core::codec::points::point_values::IntersectVisitor&gt;::visit (1,924 samples, 2.05%)</title><rect x="6.8534%" y="53" width="2.0520%" height="15" fill="rgb(235,36,10)" fg:x="6426" fg:w="1924"/><text x="7.1034%" y="63.50">&lt;..</text></g><g><title>__memmove_avx_unaligned_erms (488 samples, 0.52%)</title><rect x="10.5841%" y="37" width="0.5205%" height="15" fill="rgb(251,123,47)" fg:x="9924" fg:w="488"/><text x="10.8341%" y="47.50"></text></g><g><title>rucene::core::util::bkd::doc_ids_writer::DocIdsWriter::read_ints_with_visitor (5,042 samples, 5.38%)</title><rect x="5.7283%" y="69" width="5.3774%" height="15" fill="rgb(221,13,13)" fg:x="5371" fg:w="5042"/><text x="5.9783%" y="79.50">rucene:..</text></g><g><title>rucene::core::store::io::data_input::DataInput::read_long (2,062 samples, 2.20%)</title><rect x="8.9065%" y="53" width="2.1992%" height="15" fill="rgb(238,131,9)" fg:x="8351" fg:w="2062"/><text x="9.1565%" y="63.50">r..</text></g><g><title>rucene::core::util::bkd::bkd_reader::BKDReader::add_all (5,143 samples, 5.49%)</title><rect x="5.6525%" y="85" width="5.4851%" height="15" fill="rgb(211,50,8)" fg:x="5300" fg:w="5143"/><text x="5.9025%" y="95.50">rucene:..</text></g><g><title>rucene::core::util::doc_id_set_builder::DocIdSetBuilder::grow (30 samples, 0.03%)</title><rect x="11.1057%" y="69" width="0.0320%" height="15" fill="rgb(245,182,24)" fg:x="10413" fg:w="30"/><text x="11.3557%" y="79.50"></text></g><g><title>&lt;rucene::core::search::query::point_range_query::PointRangeIntersectVisitor as rucene::core::codec::points::point_values::IntersectVisitor&gt;::visit (118 samples, 0.13%)</title><rect x="11.1984%" y="69" width="0.1258%" height="15" fill="rgb(242,14,37)" fg:x="10500" fg:w="118"/><text x="11.4484%" y="79.50"></text></g><g><title>rucene::core::util::bkd::doc_ids_writer::DocIdsWriter::read_ints_with_visitor (306 samples, 0.33%)</title><rect x="11.1377%" y="85" width="0.3264%" height="15" fill="rgb(246,228,12)" fg:x="10443" fg:w="306"/><text x="11.3877%" y="95.50"></text></g><g><title>rucene::core::store::io::data_input::DataInput::read_long (131 samples, 0.14%)</title><rect x="11.3243%" y="69" width="0.1397%" height="15" fill="rgb(213,55,15)" fg:x="10618" fg:w="131"/><text x="11.5743%" y="79.50"></text></g><g><title>__memmove_avx_unaligned_erms (19 samples, 0.02%)</title><rect x="11.4437%" y="53" width="0.0203%" height="15" fill="rgb(209,9,3)" fg:x="10730" fg:w="19"/><text x="11.6937%" y="63.50"></text></g><g><title>rucene::core::util::bkd::bkd_reader::BKDReader::add_all (5,606 samples, 5.98%)</title><rect x="5.4872%" y="165" width="5.9789%" height="15" fill="rgb(230,59,30)" fg:x="5145" fg:w="5606"/><text x="5.7372%" y="175.50">rucene::..</text></g><g><title>rucene::core::util::bkd::bkd_reader::BKDReader::add_all (5,599 samples, 5.97%)</title><rect x="5.4947%" y="149" width="5.9714%" height="15" fill="rgb(209,121,21)" fg:x="5152" fg:w="5599"/><text x="5.7447%" y="159.50">rucene::..</text></g><g><title>rucene::core::util::bkd::bkd_reader::BKDReader::add_all (5,583 samples, 5.95%)</title><rect x="5.5118%" y="133" width="5.9544%" height="15" fill="rgb(220,109,13)" fg:x="5168" fg:w="5583"/><text x="5.7618%" y="143.50">rucene::..</text></g><g><title>rucene::core::util::bkd::bkd_reader::BKDReader::add_all (5,558 samples, 5.93%)</title><rect x="5.5384%" y="117" width="5.9277%" height="15" fill="rgb(232,18,1)" fg:x="5193" fg:w="5558"/><text x="5.7884%" y="127.50">rucene::..</text></g><g><title>rucene::core::util::bkd::bkd_reader::BKDReader::add_all (5,525 samples, 5.89%)</title><rect x="5.5736%" y="101" width="5.8925%" height="15" fill="rgb(215,41,42)" fg:x="5226" fg:w="5525"/><text x="5.8236%" y="111.50">rucene:..</text></g><g><title>&lt;rucene::core::search::query::point_range_query::PointRangeIntersectVisitor as rucene::core::codec::points::point_values::IntersectVisitor&gt;::compare (10 samples, 0.01%)</title><rect x="11.4725%" y="149" width="0.0107%" height="15" fill="rgb(224,123,36)" fg:x="10757" fg:w="10"/><text x="11.7225%" y="159.50"></text></g><g><title>&lt;rucene::core::util::bkd::bkd_reader::PackedIndexTree as rucene::core::util::bkd::bkd_reader::IndexTree&gt;::push_left (20 samples, 0.02%)</title><rect x="11.4853%" y="149" width="0.0213%" height="15" fill="rgb(240,125,3)" fg:x="10769" fg:w="20"/><text x="11.7353%" y="159.50"></text></g><g><title>&lt;rucene::core::util::bkd::bkd_reader::PackedIndexTree as rucene::core::util::bkd::bkd_reader::IndexTree&gt;::push_left (11 samples, 0.01%)</title><rect x="11.5461%" y="133" width="0.0117%" height="15" fill="rgb(205,98,50)" fg:x="10826" fg:w="11"/><text x="11.7961%" y="143.50"></text></g><g><title>&lt;rucene::core::util::bkd::bkd_reader::PackedIndexTree as rucene::core::util::bkd::bkd_reader::IndexTree&gt;::push_left (18 samples, 0.02%)</title><rect x="11.5717%" y="101" width="0.0192%" height="15" fill="rgb(205,185,37)" fg:x="10850" fg:w="18"/><text x="11.8217%" y="111.50"></text></g><g><title>rucene::core::util::bkd::bkd_reader::PackedIndexTree::read_node_data (11 samples, 0.01%)</title><rect x="11.5792%" y="85" width="0.0117%" height="15" fill="rgb(238,207,15)" fg:x="10857" fg:w="11"/><text x="11.8292%" y="95.50"></text></g><g><title>&lt;rucene::core::util::bkd::bkd_reader::PackedIndexTree as rucene::core::util::bkd::bkd_reader::IndexTree&gt;::push_right (17 samples, 0.02%)</title><rect x="11.5909%" y="101" width="0.0181%" height="15" fill="rgb(213,199,42)" fg:x="10868" fg:w="17"/><text x="11.8409%" y="111.50"></text></g><g><title>rucene::core::util::bkd::bkd_reader::PackedIndexTree::read_node_data (10 samples, 0.01%)</title><rect x="11.5984%" y="85" width="0.0107%" height="15" fill="rgb(235,201,11)" fg:x="10875" fg:w="10"/><text x="11.8484%" y="95.50"></text></g><g><title>&lt;rucene::core::util::bkd::bkd_reader::PackedIndexTree as rucene::core::util::bkd::bkd_reader::IndexTree&gt;::pop (12 samples, 0.01%)</title><rect x="11.6219%" y="85" width="0.0128%" height="15" fill="rgb(207,46,11)" fg:x="10897" fg:w="12"/><text x="11.8719%" y="95.50"></text></g><g><title>&lt;rucene::core::util::bkd::bkd_reader::PackedIndexTree as rucene::core::util::bkd::bkd_reader::IndexTree&gt;::push_left (15 samples, 0.02%)</title><rect x="11.6347%" y="85" width="0.0160%" height="15" fill="rgb(241,35,35)" fg:x="10909" fg:w="15"/><text x="11.8847%" y="95.50"></text></g><g><title>&lt;rucene::core::util::bkd::bkd_reader::PackedIndexTree as rucene::core::util::bkd::bkd_reader::IndexTree&gt;::push_right (19 samples, 0.02%)</title><rect x="11.6507%" y="85" width="0.0203%" height="15" fill="rgb(243,32,47)" fg:x="10924" fg:w="19"/><text x="11.9007%" y="95.50"></text></g><g><title>rucene::core::store::io::data_input::DataInput::read_vint (59 samples, 0.06%)</title><rect x="11.6890%" y="69" width="0.0629%" height="15" fill="rgb(247,202,23)" fg:x="10960" fg:w="59"/><text x="11.9390%" y="79.50"></text></g><g><title>&lt;rucene::core::search::query::point_range_query::PointRangeIntersectVisitor as rucene::core::codec::points::point_values::IntersectVisitor&gt;::visit (1,708 samples, 1.82%)</title><rect x="12.7182%" y="53" width="1.8216%" height="15" fill="rgb(219,102,11)" fg:x="11925" fg:w="1708"/><text x="12.9682%" y="63.50">&lt;..</text></g><g><title>__memmove_avx_unaligned_erms (447 samples, 0.48%)</title><rect x="15.9594%" y="37" width="0.4767%" height="15" fill="rgb(243,110,44)" fg:x="14964" fg:w="447"/><text x="16.2094%" y="47.50"></text></g><g><title>rucene::core::util::bkd::doc_ids_writer::DocIdsWriter::read_ints_with_visitor (4,393 samples, 4.69%)</title><rect x="11.7520%" y="69" width="4.6852%" height="15" fill="rgb(222,74,54)" fg:x="11019" fg:w="4393"/><text x="12.0020%" y="79.50">rucen..</text></g><g><title>rucene::core::store::io::data_input::DataInput::read_long (1,776 samples, 1.89%)</title><rect x="14.5431%" y="53" width="1.8941%" height="15" fill="rgb(216,99,12)" fg:x="13636" fg:w="1776"/><text x="14.7931%" y="63.50">r..</text></g><g><title>__memset_avx2_erms (20 samples, 0.02%)</title><rect x="16.4884%" y="37" width="0.0213%" height="15" fill="rgb(226,22,26)" fg:x="15460" fg:w="20"/><text x="16.7384%" y="47.50"></text></g><g><title>rucene::core::util::bkd::bkd_reader::BKDReader::add_all (4,537 samples, 4.84%)</title><rect x="11.6730%" y="85" width="4.8388%" height="15" fill="rgb(217,163,10)" fg:x="10945" fg:w="4537"/><text x="11.9230%" y="95.50">rucene..</text></g><g><title>rucene::core::util::doc_id_set_builder::DocIdSetBuilder::grow (70 samples, 0.07%)</title><rect x="16.4372%" y="69" width="0.0747%" height="15" fill="rgb(213,25,53)" fg:x="15412" fg:w="70"/><text x="16.6872%" y="79.50"></text></g><g><title>__calloc (23 samples, 0.02%)</title><rect x="16.4873%" y="53" width="0.0245%" height="15" fill="rgb(252,105,26)" fg:x="15459" fg:w="23"/><text x="16.7373%" y="63.50"></text></g><g><title>&lt;rucene::core::search::query::point_range_query::PointRangeIntersectVisitor as rucene::core::codec::points::point_values::IntersectVisitor&gt;::visit (60 samples, 0.06%)</title><rect x="16.5566%" y="69" width="0.0640%" height="15" fill="rgb(220,39,43)" fg:x="15524" fg:w="60"/><text x="16.8066%" y="79.50"></text></g><g><title>rucene::core::util::bkd::doc_ids_writer::DocIdsWriter::read_ints_with_visitor (168 samples, 0.18%)</title><rect x="16.5118%" y="85" width="0.1792%" height="15" fill="rgb(229,68,48)" fg:x="15482" fg:w="168"/><text x="16.7618%" y="95.50"></text></g><g><title>rucene::core::store::io::data_input::DataInput::read_long (66 samples, 0.07%)</title><rect x="16.6206%" y="69" width="0.0704%" height="15" fill="rgb(252,8,32)" fg:x="15584" fg:w="66"/><text x="16.8706%" y="79.50"></text></g><g><title>__memmove_avx_unaligned_erms (15 samples, 0.02%)</title><rect x="16.6750%" y="53" width="0.0160%" height="15" fill="rgb(223,20,43)" fg:x="15635" fg:w="15"/><text x="16.9250%" y="63.50"></text></g><g><title>rucene::core::util::bkd::bkd_reader::BKDReader::add_all (4,832 samples, 5.15%)</title><rect x="11.5451%" y="149" width="5.1534%" height="15" fill="rgb(229,81,49)" fg:x="10825" fg:w="4832"/><text x="11.7951%" y="159.50">rucene..</text></g><g><title>rucene::core::util::bkd::bkd_reader::BKDReader::add_all (4,817 samples, 5.14%)</title><rect x="11.5611%" y="133" width="5.1374%" height="15" fill="rgb(236,28,36)" fg:x="10840" fg:w="4817"/><text x="11.8111%" y="143.50">rucene..</text></g><g><title>rucene::core::util::bkd::bkd_reader::BKDReader::add_all (4,809 samples, 5.13%)</title><rect x="11.5696%" y="117" width="5.1289%" height="15" fill="rgb(249,185,26)" fg:x="10848" fg:w="4809"/><text x="11.8196%" y="127.50">rucene..</text></g><g><title>rucene::core::util::bkd::bkd_reader::BKDReader::add_all (4,772 samples, 5.09%)</title><rect x="11.6091%" y="101" width="5.0894%" height="15" fill="rgb(249,174,33)" fg:x="10885" fg:w="4772"/><text x="11.8591%" y="111.50">rucene..</text></g><g><title>&lt;rucene::core::util::bkd::bkd_reader::PackedIndexTree as rucene::core::util::bkd::bkd_reader::IndexTree&gt;::push_left (26 samples, 0.03%)</title><rect x="16.7145%" y="133" width="0.0277%" height="15" fill="rgb(233,201,37)" fg:x="15672" fg:w="26"/><text x="16.9645%" y="143.50"></text></g><g><title>rucene::core::util::bkd::bkd_reader::PackedIndexTree::read_node_data (12 samples, 0.01%)</title><rect x="16.7294%" y="117" width="0.0128%" height="15" fill="rgb(221,78,26)" fg:x="15686" fg:w="12"/><text x="16.9794%" y="127.50"></text></g><g><title>&lt;rucene::core::util::bkd::bkd_reader::PackedIndexTree as rucene::core::util::bkd::bkd_reader::IndexTree&gt;::push_right (18 samples, 0.02%)</title><rect x="16.7422%" y="133" width="0.0192%" height="15" fill="rgb(250,127,30)" fg:x="15698" fg:w="18"/><text x="16.9922%" y="143.50"></text></g><g><title>rucene::core::util::bkd::bkd_reader::PackedIndexTree::read_node_data (12 samples, 0.01%)</title><rect x="16.7486%" y="117" width="0.0128%" height="15" fill="rgb(230,49,44)" fg:x="15704" fg:w="12"/><text x="16.9986%" y="127.50"></text></g><g><title>&lt;rucene::core::util::bkd::bkd_reader::PackedIndexTree as rucene::core::util::bkd::bkd_reader::IndexTree&gt;::split_packed_value (16 samples, 0.02%)</title><rect x="16.7731%" y="133" width="0.0171%" height="15" fill="rgb(229,67,23)" fg:x="15727" fg:w="16"/><text x="17.0231%" y="143.50"></text></g><g><title>__GI___libc_malloc (14 samples, 0.01%)</title><rect x="16.7753%" y="117" width="0.0149%" height="15" fill="rgb(249,83,47)" fg:x="15729" fg:w="14"/><text x="17.0253%" y="127.50"></text></g><g><title>&lt;rucene::core::util::bkd::bkd_reader::PackedIndexTree as rucene::core::util::bkd::bkd_reader::IndexTree&gt;::push_left (10 samples, 0.01%)</title><rect x="16.8201%" y="101" width="0.0107%" height="15" fill="rgb(215,43,3)" fg:x="15771" fg:w="10"/><text x="17.0701%" y="111.50"></text></g><g><title>&lt;rucene::core::util::bkd::bkd_reader::PackedIndexTree as rucene::core::util::bkd::bkd_reader::IndexTree&gt;::push_right (10 samples, 0.01%)</title><rect x="16.8307%" y="101" width="0.0107%" height="15" fill="rgb(238,154,13)" fg:x="15781" fg:w="10"/><text x="17.0807%" y="111.50"></text></g><g><title>&lt;rucene::core::util::bkd::bkd_reader::PackedIndexTree as rucene::core::util::bkd::bkd_reader::IndexTree&gt;::push_left (11 samples, 0.01%)</title><rect x="16.8574%" y="85" width="0.0117%" height="15" fill="rgb(219,56,2)" fg:x="15806" fg:w="11"/><text x="17.1074%" y="95.50"></text></g><g><title>&lt;rucene::core::util::bkd::bkd_reader::PackedIndexTree as rucene::core::util::bkd::bkd_reader::IndexTree&gt;::push_right (13 samples, 0.01%)</title><rect x="16.8691%" y="85" width="0.0139%" height="15" fill="rgb(233,0,4)" fg:x="15817" fg:w="13"/><text x="17.1191%" y="95.50"></text></g><g><title>rucene::core::store::io::data_input::DataInput::read_vint (36 samples, 0.04%)</title><rect x="16.8883%" y="69" width="0.0384%" height="15" fill="rgb(235,30,7)" fg:x="15835" fg:w="36"/><text x="17.1383%" y="79.50"></text></g><g><title>&lt;rucene::core::search::query::point_range_query::PointRangeIntersectVisitor as rucene::core::codec::points::point_values::IntersectVisitor&gt;::visit (1,058 samples, 1.13%)</title><rect x="17.4920%" y="53" width="1.1284%" height="15" fill="rgb(250,79,13)" fg:x="16401" fg:w="1058"/><text x="17.7420%" y="63.50"></text></g><g><title>rucene::core::util::bkd::doc_ids_writer::DocIdsWriter::read_ints_with_visitor (2,741 samples, 2.92%)</title><rect x="16.9267%" y="69" width="2.9233%" height="15" fill="rgb(211,146,34)" fg:x="15871" fg:w="2741"/><text x="17.1767%" y="79.50">ru..</text></g><g><title>rucene::core::store::io::data_input::DataInput::read_long (1,153 samples, 1.23%)</title><rect x="18.6204%" y="53" width="1.2297%" height="15" fill="rgb(228,22,38)" fg:x="17459" fg:w="1153"/><text x="18.8704%" y="63.50"></text></g><g><title>__memmove_avx_unaligned_erms (275 samples, 0.29%)</title><rect x="19.5568%" y="37" width="0.2933%" height="15" fill="rgb(235,168,5)" fg:x="18337" fg:w="275"/><text x="19.8068%" y="47.50"></text></g><g><title>__memset_avx2_erms (39 samples, 0.04%)</title><rect x="19.9428%" y="37" width="0.0416%" height="15" fill="rgb(221,155,16)" fg:x="18699" fg:w="39"/><text x="20.1928%" y="47.50"></text></g><g><title>__calloc (41 samples, 0.04%)</title><rect x="19.9428%" y="53" width="0.0437%" height="15" fill="rgb(215,215,53)" fg:x="18699" fg:w="41"/><text x="20.1928%" y="63.50"></text></g><g><title>rucene::core::util::bkd::bkd_reader::BKDReader::add_all (2,913 samples, 3.11%)</title><rect x="16.8830%" y="85" width="3.1068%" height="15" fill="rgb(223,4,10)" fg:x="15830" fg:w="2913"/><text x="17.1330%" y="95.50">ruc..</text></g><g><title>rucene::core::util::doc_id_set_builder::DocIdSetBuilder::grow (131 samples, 0.14%)</title><rect x="19.8500%" y="69" width="0.1397%" height="15" fill="rgb(234,103,6)" fg:x="18612" fg:w="131"/><text x="20.1000%" y="79.50"></text></g><g><title>&lt;rucene::core::search::query::point_range_query::PointRangeIntersectVisitor as rucene::core::codec::points::point_values::IntersectVisitor&gt;::visit (40 samples, 0.04%)</title><rect x="20.0090%" y="69" width="0.0427%" height="15" fill="rgb(227,97,0)" fg:x="18761" fg:w="40"/><text x="20.2590%" y="79.50"></text></g><g><title>rucene::core::util::bkd::doc_ids_writer::DocIdsWriter::read_ints_with_visitor (88 samples, 0.09%)</title><rect x="19.9898%" y="85" width="0.0939%" height="15" fill="rgb(234,150,53)" fg:x="18743" fg:w="88"/><text x="20.2398%" y="95.50"></text></g><g><title>rucene::core::store::io::data_input::DataInput::read_long (30 samples, 0.03%)</title><rect x="20.0516%" y="69" width="0.0320%" height="15" fill="rgb(228,201,54)" fg:x="18801" fg:w="30"/><text x="20.3016%" y="79.50"></text></g><g><title>rucene::core::util::bkd::bkd_reader::BKDReader::add_all (3,090 samples, 3.30%)</title><rect x="16.8041%" y="133" width="3.2955%" height="15" fill="rgb(222,22,37)" fg:x="15756" fg:w="3090"/><text x="17.0541%" y="143.50">ruc..</text></g><g><title>rucene::core::util::bkd::bkd_reader::BKDReader::add_all (3,075 samples, 3.28%)</title><rect x="16.8201%" y="117" width="3.2795%" height="15" fill="rgb(237,53,32)" fg:x="15771" fg:w="3075"/><text x="17.0701%" y="127.50">ruc..</text></g><g><title>rucene::core::util::bkd::bkd_reader::BKDReader::add_all (3,055 samples, 3.26%)</title><rect x="16.8414%" y="101" width="3.2582%" height="15" fill="rgb(233,25,53)" fg:x="15791" fg:w="3055"/><text x="17.0914%" y="111.50">ruc..</text></g><g><title>rucene::core::util::doc_id_set_builder::DocIdSetBuilder::grow (15 samples, 0.02%)</title><rect x="20.0836%" y="85" width="0.0160%" height="15" fill="rgb(210,40,34)" fg:x="18831" fg:w="15"/><text x="20.3336%" y="95.50"></text></g><g><title>&lt;rucene::core::search::query::point_range_query::PointRangeIntersectVisitor as rucene::core::codec::points::point_values::IntersectVisitor&gt;::compare (11 samples, 0.01%)</title><rect x="20.1039%" y="117" width="0.0117%" height="15" fill="rgb(241,220,44)" fg:x="18850" fg:w="11"/><text x="20.3539%" y="127.50"></text></g><g><title>&lt;rucene::core::util::bkd::bkd_reader::PackedIndexTree as rucene::core::util::bkd::bkd_reader::IndexTree&gt;::push_left (20 samples, 0.02%)</title><rect x="20.1220%" y="117" width="0.0213%" height="15" fill="rgb(235,28,35)" fg:x="18867" fg:w="20"/><text x="20.3720%" y="127.50"></text></g><g><title>&lt;rucene::core::util::bkd::bkd_reader::PackedIndexTree as rucene::core::util::bkd::bkd_reader::IndexTree&gt;::push_right (26 samples, 0.03%)</title><rect x="20.1433%" y="117" width="0.0277%" height="15" fill="rgb(210,56,17)" fg:x="18887" fg:w="26"/><text x="20.3933%" y="127.50"></text></g><g><title>rucene::core::util::bkd::bkd_reader::PackedIndexTree::read_node_data (21 samples, 0.02%)</title><rect x="20.1487%" y="101" width="0.0224%" height="15" fill="rgb(224,130,29)" fg:x="18892" fg:w="21"/><text x="20.3987%" y="111.50"></text></g><g><title>&lt;rucene::core::util::bkd::bkd_reader::PackedIndexTree as rucene::core::util::bkd::bkd_reader::IndexTree&gt;::push_left (12 samples, 0.01%)</title><rect x="20.1935%" y="101" width="0.0128%" height="15" fill="rgb(235,212,8)" fg:x="18934" fg:w="12"/><text x="20.4435%" y="111.50"></text></g><g><title>&lt;rucene::core::util::bkd::bkd_reader::PackedIndexTree as rucene::core::util::bkd::bkd_reader::IndexTree&gt;::push_left (11 samples, 0.01%)</title><rect x="20.2201%" y="85" width="0.0117%" height="15" fill="rgb(223,33,50)" fg:x="18959" fg:w="11"/><text x="20.4701%" y="95.50"></text></g><g><title>&lt;rucene::core::search::query::point_range_query::PointRangeIntersectVisitor as rucene::core::codec::points::point_values::IntersectVisitor&gt;::visit (583 samples, 0.62%)</title><rect x="20.5870%" y="53" width="0.6218%" height="15" fill="rgb(219,149,13)" fg:x="19303" fg:w="583"/><text x="20.8370%" y="63.50"></text></g><g><title>rucene::core::util::bkd::doc_ids_writer::DocIdsWriter::read_ints_with_visitor (1,522 samples, 1.62%)</title><rect x="20.2457%" y="69" width="1.6232%" height="15" fill="rgb(250,156,29)" fg:x="18983" fg:w="1522"/><text x="20.4957%" y="79.50"></text></g><g><title>rucene::core::store::io::data_input::DataInput::read_long (619 samples, 0.66%)</title><rect x="21.2088%" y="53" width="0.6602%" height="15" fill="rgb(216,193,19)" fg:x="19886" fg:w="619"/><text x="21.4588%" y="63.50"></text></g><g><title>__memmove_avx_unaligned_erms (163 samples, 0.17%)</title><rect x="21.6951%" y="37" width="0.1738%" height="15" fill="rgb(216,135,14)" fg:x="20342" fg:w="163"/><text x="21.9451%" y="47.50"></text></g><g><title>__memset_avx2_erms (85 samples, 0.09%)</title><rect x="22.0492%" y="37" width="0.0907%" height="15" fill="rgb(241,47,5)" fg:x="20674" fg:w="85"/><text x="22.2992%" y="47.50"></text></g><g><title>__calloc (90 samples, 0.10%)</title><rect x="22.0471%" y="53" width="0.0960%" height="15" fill="rgb(233,42,35)" fg:x="20672" fg:w="90"/><text x="22.2971%" y="63.50"></text></g><g><title>rucene::core::util::bkd::bkd_reader::BKDReader::add_all (1,794 samples, 1.91%)</title><rect x="20.2340%" y="85" width="1.9133%" height="15" fill="rgb(231,13,6)" fg:x="18972" fg:w="1794"/><text x="20.4840%" y="95.50">r..</text></g><g><title>rucene::core::util::doc_id_set_builder::DocIdSetBuilder::grow (261 samples, 0.28%)</title><rect x="21.8690%" y="69" width="0.2784%" height="15" fill="rgb(207,181,40)" fg:x="20505" fg:w="261"/><text x="22.1190%" y="79.50"></text></g><g><title>&lt;rucene::core::search::query::point_range_query::PointRangeIntersectVisitor as rucene::core::codec::points::point_values::IntersectVisitor&gt;::visit (27 samples, 0.03%)</title><rect x="22.1612%" y="69" width="0.0288%" height="15" fill="rgb(254,173,49)" fg:x="20779" fg:w="27"/><text x="22.4112%" y="79.50"></text></g><g><title>rucene::core::util::bkd::doc_ids_writer::DocIdsWriter::read_ints_with_visitor (66 samples, 0.07%)</title><rect x="22.1473%" y="85" width="0.0704%" height="15" fill="rgb(221,1,38)" fg:x="20766" fg:w="66"/><text x="22.3973%" y="95.50"></text></g><g><title>rucene::core::store::io::data_input::DataInput::read_long (26 samples, 0.03%)</title><rect x="22.1900%" y="69" width="0.0277%" height="15" fill="rgb(206,124,46)" fg:x="20806" fg:w="26"/><text x="22.4400%" y="79.50"></text></g><g><title>rucene::core::util::bkd::bkd_reader::BKDReader::add_all (1,899 samples, 2.03%)</title><rect x="20.1935%" y="117" width="2.0253%" height="15" fill="rgb(249,21,11)" fg:x="18934" fg:w="1899"/><text x="20.4435%" y="127.50">r..</text></g><g><title>rucene::core::util::bkd::bkd_reader::BKDReader::add_all (1,884 samples, 2.01%)</title><rect x="20.2095%" y="101" width="2.0093%" height="15" fill="rgb(222,201,40)" fg:x="18949" fg:w="1884"/><text x="20.4595%" y="111.50">r..</text></g><g><title>&lt;rucene::core::search::query::point_range_query::PointRangeIntersectVisitor as rucene::core::codec::points::point_values::IntersectVisitor&gt;::compare (14 samples, 0.01%)</title><rect x="22.3020%" y="101" width="0.0149%" height="15" fill="rgb(235,61,29)" fg:x="20911" fg:w="14"/><text x="22.5520%" y="111.50"></text></g><g><title>&lt;rucene::core::search::query::point_range_query::PointRangeIntersectVisitor as rucene::core::codec::points::point_values::IntersectVisitor&gt;::visit_by_packed_value (201 samples, 0.21%)</title><rect x="22.3169%" y="101" width="0.2144%" height="15" fill="rgb(219,207,3)" fg:x="20925" fg:w="201"/><text x="22.5669%" y="111.50"></text></g><g><title>__memcmp_avx2_movbe (98 samples, 0.10%)</title><rect x="22.4268%" y="85" width="0.1045%" height="15" fill="rgb(222,56,46)" fg:x="21028" fg:w="98"/><text x="22.6768%" y="95.50"></text></g><g><title>&lt;rucene::core::util::bkd::bkd_reader::PackedIndexTree as rucene::core::util::bkd::bkd_reader::IndexTree&gt;::push_left (22 samples, 0.02%)</title><rect x="22.5377%" y="101" width="0.0235%" height="15" fill="rgb(239,76,54)" fg:x="21132" fg:w="22"/><text x="22.7877%" y="111.50"></text></g><g><title>&lt;rucene::core::util::bkd::bkd_reader::PackedIndexTree as rucene::core::util::bkd::bkd_reader::IndexTree&gt;::push_right (14 samples, 0.01%)</title><rect x="22.5611%" y="101" width="0.0149%" height="15" fill="rgb(231,124,27)" fg:x="21154" fg:w="14"/><text x="22.8111%" y="111.50"></text></g><g><title>&lt;rucene::core::util::bkd::bkd_reader::PackedIndexTree as rucene::core::util::bkd::bkd_reader::IndexTree&gt;::split_packed_value (16 samples, 0.02%)</title><rect x="22.5825%" y="101" width="0.0171%" height="15" fill="rgb(249,195,6)" fg:x="21174" fg:w="16"/><text x="22.8325%" y="111.50"></text></g><g><title>__GI___libc_malloc (14 samples, 0.01%)</title><rect x="22.5846%" y="85" width="0.0149%" height="15" fill="rgb(237,174,47)" fg:x="21176" fg:w="14"/><text x="22.8346%" y="95.50"></text></g><g><title>rucene::core::store::io::data_input::DataInput::read_bytes (94 samples, 0.10%)</title><rect x="22.6113%" y="101" width="0.1003%" height="15" fill="rgb(206,201,31)" fg:x="21201" fg:w="94"/><text x="22.8613%" y="111.50"></text></g><g><title>__memmove_avx_unaligned_erms (34 samples, 0.04%)</title><rect x="22.6753%" y="85" width="0.0363%" height="15" fill="rgb(231,57,52)" fg:x="21261" fg:w="34"/><text x="22.9253%" y="95.50"></text></g><g><title>&lt;rucene::core::search::query::point_range_query::PointRangeIntersectVisitor as rucene::core::codec::points::point_values::IntersectVisitor&gt;::visit (406 samples, 0.43%)</title><rect x="22.9366%" y="53" width="0.4330%" height="15" fill="rgb(248,177,22)" fg:x="21506" fg:w="406"/><text x="23.1866%" y="63.50"></text></g><g><title>rucene::core::util::bkd::doc_ids_writer::DocIdsWriter::read_ints_with_visitor (1,000 samples, 1.07%)</title><rect x="22.7371%" y="69" width="1.0665%" height="15" fill="rgb(215,211,37)" fg:x="21319" fg:w="1000"/><text x="22.9871%" y="79.50"></text></g><g><title>rucene::core::store::io::data_input::DataInput::read_long (406 samples, 0.43%)</title><rect x="23.3706%" y="53" width="0.4330%" height="15" fill="rgb(241,128,51)" fg:x="21913" fg:w="406"/><text x="23.6206%" y="63.50"></text></g><g><title>__memmove_avx_unaligned_erms (109 samples, 0.12%)</title><rect x="23.6874%" y="37" width="0.1163%" height="15" fill="rgb(227,165,31)" fg:x="22210" fg:w="109"/><text x="23.9374%" y="47.50"></text></g><g><title>__memset_avx2_erms (13 samples, 0.01%)</title><rect x="23.8079%" y="37" width="0.0139%" height="15" fill="rgb(228,167,24)" fg:x="22323" fg:w="13"/><text x="24.0579%" y="47.50"></text></g><g><title>__calloc (16 samples, 0.02%)</title><rect x="23.8068%" y="53" width="0.0171%" height="15" fill="rgb(228,143,12)" fg:x="22322" fg:w="16"/><text x="24.0568%" y="63.50"></text></g><g><title>rucene::core::util::bkd::bkd_reader::BKDReader::add_all (1,029 samples, 1.10%)</title><rect x="22.7275%" y="85" width="1.0974%" height="15" fill="rgb(249,149,8)" fg:x="21310" fg:w="1029"/><text x="22.9775%" y="95.50"></text></g><g><title>rucene::core::util::doc_id_set_builder::DocIdSetBuilder::grow (20 samples, 0.02%)</title><rect x="23.8036%" y="69" width="0.0213%" height="15" fill="rgb(243,35,44)" fg:x="22319" fg:w="20"/><text x="24.0536%" y="79.50"></text></g><g><title>&lt;rucene::core::search::query::point_range_query::PointRangeIntersectVisitor as rucene::core::codec::points::point_values::IntersectVisitor&gt;::visit (12 samples, 0.01%)</title><rect x="23.8356%" y="69" width="0.0128%" height="15" fill="rgb(246,89,9)" fg:x="22349" fg:w="12"/><text x="24.0856%" y="79.50"></text></g><g><title>rucene::core::util::bkd::bkd_reader::BKDReader::add_all (1,081 samples, 1.15%)</title><rect x="22.7115%" y="101" width="1.1529%" height="15" fill="rgb(233,213,13)" fg:x="21295" fg:w="1081"/><text x="22.9615%" y="111.50"></text></g><g><title>rucene::core::util::bkd::doc_ids_writer::DocIdsWriter::read_ints_with_visitor (37 samples, 0.04%)</title><rect x="23.8250%" y="85" width="0.0395%" height="15" fill="rgb(233,141,41)" fg:x="22339" fg:w="37"/><text x="24.0750%" y="95.50"></text></g><g><title>rucene::core::store::io::data_input::DataInput::read_long (15 samples, 0.02%)</title><rect x="23.8484%" y="69" width="0.0160%" height="15" fill="rgb(239,167,4)" fg:x="22361" fg:w="15"/><text x="24.0984%" y="79.50"></text></g><g><title>&lt;rucene::core::search::query::point_range_query::PointRangeIntersectVisitor as rucene::core::codec::points::point_values::IntersectVisitor&gt;::compare (14 samples, 0.01%)</title><rect x="25.1581%" y="85" width="0.0149%" height="15" fill="rgb(209,217,16)" fg:x="23589" fg:w="14"/><text x="25.4081%" y="95.50"></text></g><g><title>__memcmp_avx2_movbe (1,815 samples, 1.94%)</title><rect x="26.9893%" y="69" width="1.9357%" height="15" fill="rgb(219,88,35)" fg:x="25306" fg:w="1815"/><text x="27.2393%" y="79.50">_..</text></g><g><title>&lt;rucene::core::search::query::point_range_query::PointRangeIntersectVisitor as rucene::core::codec::points::point_values::IntersectVisitor&gt;::visit_by_packed_value (3,519 samples, 3.75%)</title><rect x="25.1730%" y="85" width="3.7531%" height="15" fill="rgb(220,193,23)" fg:x="23603" fg:w="3519"/><text x="25.4230%" y="95.50">&lt;ruc..</text></g><g><title>rucene::core::store::io::data_input::DataInput::read_bytes (1,532 samples, 1.63%)</title><rect x="28.9357%" y="85" width="1.6339%" height="15" fill="rgb(230,90,52)" fg:x="27131" fg:w="1532"/><text x="29.1857%" y="95.50"></text></g><g><title>__memmove_avx_unaligned_erms (443 samples, 0.47%)</title><rect x="30.0972%" y="69" width="0.4725%" height="15" fill="rgb(252,106,19)" fg:x="28220" fg:w="443"/><text x="30.3472%" y="79.50"></text></g><g><title>&lt;rucene::core::search::query::point_range_query::PointRangeIntersectVisitor as rucene::core::codec::points::point_values::IntersectVisitor&gt;::visit (240 samples, 0.26%)</title><rect x="30.7083%" y="53" width="0.2560%" height="15" fill="rgb(206,74,20)" fg:x="28793" fg:w="240"/><text x="30.9583%" y="63.50"></text></g><g><title>rucene::core::util::bkd::doc_ids_writer::DocIdsWriter::read_ints_with_visitor (650 samples, 0.69%)</title><rect x="30.5782%" y="69" width="0.6932%" height="15" fill="rgb(230,138,44)" fg:x="28671" fg:w="650"/><text x="30.8282%" y="79.50"></text></g><g><title>rucene::core::store::io::data_input::DataInput::read_long (288 samples, 0.31%)</title><rect x="30.9642%" y="53" width="0.3072%" height="15" fill="rgb(235,182,43)" fg:x="29033" fg:w="288"/><text x="31.2142%" y="63.50"></text></g><g><title>__memmove_avx_unaligned_erms (93 samples, 0.10%)</title><rect x="31.1722%" y="37" width="0.0992%" height="15" fill="rgb(242,16,51)" fg:x="29228" fg:w="93"/><text x="31.4222%" y="47.50"></text></g><g><title>rucene::core::util::bkd::bkd_reader::BKDReader::add_all (668 samples, 0.71%)</title><rect x="30.5696%" y="85" width="0.7124%" height="15" fill="rgb(248,9,4)" fg:x="28663" fg:w="668"/><text x="30.8196%" y="95.50"></text></g><g><title>rucene::core::util::doc_id_set_builder::DocIdSetBuilder::grow (10 samples, 0.01%)</title><rect x="31.2714%" y="69" width="0.0107%" height="15" fill="rgb(210,31,22)" fg:x="29321" fg:w="10"/><text x="31.5214%" y="79.50"></text></g><g><title>__calloc (10 samples, 0.01%)</title><rect x="31.2714%" y="53" width="0.0107%" height="15" fill="rgb(239,54,39)" fg:x="29321" fg:w="10"/><text x="31.5214%" y="63.50"></text></g><g><title>rucene::core::store::io::data_input::DataInput::read_vint (26 samples, 0.03%)</title><rect x="31.2970%" y="69" width="0.0277%" height="15" fill="rgb(230,99,41)" fg:x="29345" fg:w="26"/><text x="31.5470%" y="79.50"></text></g><g><title>rucene::core::util::bkd::bkd_reader::BKDReader::read_doc_ids (963 samples, 1.03%)</title><rect x="31.2959%" y="85" width="1.0271%" height="15" fill="rgb(253,106,12)" fg:x="29344" fg:w="963"/><text x="31.5459%" y="95.50"></text></g><g><title>rucene::core::util::bkd::doc_ids_writer::DocIdsWriter::read_ints (936 samples, 1.00%)</title><rect x="31.3247%" y="69" width="0.9983%" height="15" fill="rgb(213,46,41)" fg:x="29371" fg:w="936"/><text x="31.5747%" y="79.50"></text></g><g><title>rucene::core::store::io::data_input::DataInput::read_long (688 samples, 0.73%)</title><rect x="31.5892%" y="53" width="0.7338%" height="15" fill="rgb(215,133,35)" fg:x="29619" fg:w="688"/><text x="31.8392%" y="63.50"></text></g><g><title>__memmove_avx_unaligned_erms (172 samples, 0.18%)</title><rect x="32.1395%" y="37" width="0.1834%" height="15" fill="rgb(213,28,5)" fg:x="30135" fg:w="172"/><text x="32.3895%" y="47.50"></text></g><g><title>__memset_avx2_erms (15 samples, 0.02%)</title><rect x="32.3539%" y="53" width="0.0160%" height="15" fill="rgb(215,77,49)" fg:x="30336" fg:w="15"/><text x="32.6039%" y="63.50"></text></g><g><title>__calloc (44 samples, 0.05%)</title><rect x="32.3486%" y="69" width="0.0469%" height="15" fill="rgb(248,100,22)" fg:x="30331" fg:w="44"/><text x="32.5986%" y="79.50"></text></g><g><title>_int_malloc (20 samples, 0.02%)</title><rect x="32.3742%" y="53" width="0.0213%" height="15" fill="rgb(208,67,9)" fg:x="30355" fg:w="20"/><text x="32.6242%" y="63.50"></text></g><g><title>malloc_consolidate (11 samples, 0.01%)</title><rect x="32.3838%" y="37" width="0.0117%" height="15" fill="rgb(219,133,21)" fg:x="30364" fg:w="11"/><text x="32.6338%" y="47.50"></text></g><g><title>rucene::core::util::bkd::bkd_reader::BKDReader::intersect_with_state (8,004 samples, 8.54%)</title><rect x="23.8644%" y="101" width="8.5364%" height="15" fill="rgb(246,46,29)" fg:x="22376" fg:w="8004"/><text x="24.1144%" y="111.50">rucene::core..</text></g><g><title>rucene::core::util::doc_id_set_builder::DocIdSetBuilder::grow (73 samples, 0.08%)</title><rect x="32.3230%" y="85" width="0.0779%" height="15" fill="rgb(246,185,52)" fg:x="30307" fg:w="73"/><text x="32.5730%" y="95.50"></text></g><g><title>rucene::core::util::bkd::bkd_reader::BKDReader::read_doc_ids (45 samples, 0.05%)</title><rect x="32.4008%" y="101" width="0.0480%" height="15" fill="rgb(252,136,11)" fg:x="30380" fg:w="45"/><text x="32.6508%" y="111.50"></text></g><g><title>rucene::core::util::bkd::doc_ids_writer::DocIdsWriter::read_ints (44 samples, 0.05%)</title><rect x="32.4019%" y="85" width="0.0469%" height="15" fill="rgb(219,138,53)" fg:x="30381" fg:w="44"/><text x="32.6519%" y="95.50"></text></g><g><title>rucene::core::store::io::data_input::DataInput::read_long (30 samples, 0.03%)</title><rect x="32.4168%" y="69" width="0.0320%" height="15" fill="rgb(211,51,23)" fg:x="30395" fg:w="30"/><text x="32.6668%" y="79.50"></text></g><g><title>rucene::core::util::bkd::bkd_reader::BKDReader::intersect_with_state (26,634 samples, 28.41%)</title><rect x="4.0496%" y="261" width="28.4057%" height="15" fill="rgb(247,221,28)" fg:x="3797" fg:w="26634"/><text x="4.2996%" y="271.50">rucene::core::util::bkd::bkd_reader::BKDReader..</text></g><g><title>rucene::core::util::bkd::bkd_reader::BKDReader::intersect_with_state (26,568 samples, 28.34%)</title><rect x="4.1200%" y="245" width="28.3353%" height="15" fill="rgb(251,222,45)" fg:x="3863" fg:w="26568"/><text x="4.3700%" y="255.50">rucene::core::util::bkd::bkd_reader::BKDReader..</text></g><g><title>rucene::core::util::bkd::bkd_reader::BKDReader::intersect_with_state (26,505 samples, 28.27%)</title><rect x="4.1872%" y="229" width="28.2681%" height="15" fill="rgb(217,162,53)" fg:x="3926" fg:w="26505"/><text x="4.4372%" y="239.50">rucene::core::util::bkd::bkd_reader::BKDReade..</text></g><g><title>rucene::core::util::bkd::bkd_reader::BKDReader::intersect_with_state (26,437 samples, 28.20%)</title><rect x="4.2597%" y="213" width="28.1956%" height="15" fill="rgb(229,93,14)" fg:x="3994" fg:w="26437"/><text x="4.5097%" y="223.50">rucene::core::util::bkd::bkd_reader::BKDReade..</text></g><g><title>rucene::core::util::bkd::bkd_reader::BKDReader::intersect_with_state (26,370 samples, 28.12%)</title><rect x="4.3311%" y="197" width="28.1241%" height="15" fill="rgb(209,67,49)" fg:x="4061" fg:w="26370"/><text x="4.5811%" y="207.50">rucene::core::util::bkd::bkd_reader::BKDReade..</text></g><g><title>rucene::core::util::bkd::bkd_reader::BKDReader::intersect_with_state (25,379 samples, 27.07%)</title><rect x="5.3881%" y="181" width="27.0672%" height="15" fill="rgb(213,87,29)" fg:x="5052" fg:w="25379"/><text x="5.6381%" y="191.50">rucene::core::util::bkd::bkd_reader::BKDRea..</text></g><g><title>rucene::core::util::bkd::bkd_reader::BKDReader::intersect_with_state (19,680 samples, 20.99%)</title><rect x="11.4661%" y="165" width="20.9891%" height="15" fill="rgb(205,151,52)" fg:x="10751" fg:w="19680"/><text x="11.7161%" y="175.50">rucene::core::util::bkd::bkd_read..</text></g><g><title>rucene::core::util::bkd::bkd_reader::BKDReader::intersect_with_state (14,774 samples, 15.76%)</title><rect x="16.6985%" y="149" width="15.7567%" height="15" fill="rgb(253,215,39)" fg:x="15657" fg:w="14774"/><text x="16.9485%" y="159.50">rucene::core::util::bkd:..</text></g><g><title>rucene::core::util::bkd::bkd_reader::BKDReader::intersect_with_state (11,585 samples, 12.36%)</title><rect x="20.0996%" y="133" width="12.3556%" height="15" fill="rgb(221,220,41)" fg:x="18846" fg:w="11585"/><text x="20.3496%" y="143.50">rucene::core::util..</text></g><g><title>rucene::core::util::bkd::bkd_reader::BKDReader::intersect_with_state (9,598 samples, 10.24%)</title><rect x="22.2188%" y="117" width="10.2364%" height="15" fill="rgb(218,133,21)" fg:x="20833" fg:w="9598"/><text x="22.4688%" y="127.50">rucene::core::u..</text></g><g><title>__GI___libc_malloc (48 samples, 0.05%)</title><rect x="32.4702%" y="229" width="0.0512%" height="15" fill="rgb(221,193,43)" fg:x="30445" fg:w="48"/><text x="32.7202%" y="239.50"></text></g><g><title>_int_malloc (23 samples, 0.02%)</title><rect x="32.4968%" y="213" width="0.0245%" height="15" fill="rgb(240,128,52)" fg:x="30470" fg:w="23"/><text x="32.7468%" y="223.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (66 samples, 0.07%)</title><rect x="32.4616%" y="245" width="0.0704%" height="15" fill="rgb(253,114,12)" fg:x="30437" fg:w="66"/><text x="32.7116%" y="255.50"></text></g><g><title>__calloc (68 samples, 0.07%)</title><rect x="32.5320%" y="245" width="0.0725%" height="15" fill="rgb(215,223,47)" fg:x="30503" fg:w="68"/><text x="32.7820%" y="255.50"></text></g><g><title>_int_malloc (30 samples, 0.03%)</title><rect x="32.5725%" y="229" width="0.0320%" height="15" fill="rgb(248,225,23)" fg:x="30541" fg:w="30"/><text x="32.8225%" y="239.50"></text></g><g><title>rucene::core::util::bkd::bkd_reader::BKDReader::intersect (26,942 samples, 28.73%)</title><rect x="3.8821%" y="277" width="28.7341%" height="15" fill="rgb(250,108,0)" fg:x="3640" fg:w="26942"/><text x="4.1321%" y="287.50">rucene::core::util::bkd::bkd_reader::BKDReader..</text></g><g><title>rucene::core::util::bkd::bkd_reader::PackedIndexTree::new (149 samples, 0.16%)</title><rect x="32.4574%" y="261" width="0.1589%" height="15" fill="rgb(228,208,7)" fg:x="30433" fg:w="149"/><text x="32.7074%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (14 samples, 0.01%)</title><rect x="32.7763%" y="261" width="0.0149%" height="15" fill="rgb(244,45,10)" fg:x="30732" fg:w="14"/><text x="33.0263%" y="271.50"></text></g><g><title>alloc::raw_vec::finish_grow (14 samples, 0.01%)</title><rect x="32.7763%" y="245" width="0.0149%" height="15" fill="rgb(207,125,25)" fg:x="30732" fg:w="14"/><text x="33.0263%" y="255.50"></text></g><g><title>__GI___libc_realloc (13 samples, 0.01%)</title><rect x="32.7773%" y="229" width="0.0139%" height="15" fill="rgb(210,195,18)" fg:x="30733" fg:w="13"/><text x="33.0273%" y="239.50"></text></g><g><title>_int_realloc (13 samples, 0.01%)</title><rect x="32.7773%" y="213" width="0.0139%" height="15" fill="rgb(249,80,12)" fg:x="30733" fg:w="13"/><text x="33.0273%" y="223.50"></text></g><g><title>__calloc (39 samples, 0.04%)</title><rect x="33.8513%" y="245" width="0.0416%" height="15" fill="rgb(221,65,9)" fg:x="31740" fg:w="39"/><text x="34.1013%" y="255.50"></text></g><g><title>_int_malloc (30 samples, 0.03%)</title><rect x="33.8609%" y="229" width="0.0320%" height="15" fill="rgb(235,49,36)" fg:x="31749" fg:w="30"/><text x="34.1109%" y="239.50"></text></g><g><title>malloc_consolidate (19 samples, 0.02%)</title><rect x="33.8726%" y="213" width="0.0203%" height="15" fill="rgb(225,32,20)" fg:x="31760" fg:w="19"/><text x="34.1226%" y="223.50"></text></g><g><title>rucene::core::util::doc_id_set_builder::DocIdSetBuilder::build (1,213 samples, 1.29%)</title><rect x="32.6163%" y="277" width="1.2937%" height="15" fill="rgb(215,141,46)" fg:x="30582" fg:w="1213"/><text x="32.8663%" y="287.50"></text></g><g><title>rucene::core::util::sorter::LSBRadixSorter::sort (1,046 samples, 1.12%)</title><rect x="32.7944%" y="261" width="1.1156%" height="15" fill="rgb(250,160,47)" fg:x="30749" fg:w="1046"/><text x="33.0444%" y="271.50"></text></g><g><title>&lt;rucene::core::search::query::point_range_query::PointRangeWeight as rucene::core::search::query::Weight&lt;C&gt;&gt;::create_scorer (28,261 samples, 30.14%)</title><rect x="3.7701%" y="293" width="30.1409%" height="15" fill="rgb(216,222,40)" fg:x="3535" fg:w="28261"/><text x="4.0201%" y="303.50">&lt;rucene::core::search::query::point_range_query::..</text></g><g><title>copy_page_to_iter_iovec (15 samples, 0.02%)</title><rect x="34.0657%" y="133" width="0.0160%" height="15" fill="rgb(234,217,39)" fg:x="31941" fg:w="15"/><text x="34.3157%" y="143.50"></text></g><g><title>copy_user_enhanced_fast_string (15 samples, 0.02%)</title><rect x="34.0657%" y="117" width="0.0160%" height="15" fill="rgb(207,178,40)" fg:x="31941" fg:w="15"/><text x="34.3157%" y="127.50"></text></g><g><title>new_sync_read (16 samples, 0.02%)</title><rect x="34.0657%" y="165" width="0.0171%" height="15" fill="rgb(221,136,13)" fg:x="31941" fg:w="16"/><text x="34.3157%" y="175.50"></text></g><g><title>generic_file_buffered_read (16 samples, 0.02%)</title><rect x="34.0657%" y="149" width="0.0171%" height="15" fill="rgb(249,199,10)" fg:x="31941" fg:w="16"/><text x="34.3157%" y="159.50"></text></g><g><title>ksys_read (19 samples, 0.02%)</title><rect x="34.0646%" y="197" width="0.0203%" height="15" fill="rgb(249,222,13)" fg:x="31940" fg:w="19"/><text x="34.3146%" y="207.50"></text></g><g><title>vfs_read (18 samples, 0.02%)</title><rect x="34.0657%" y="181" width="0.0192%" height="15" fill="rgb(244,185,38)" fg:x="31941" fg:w="18"/><text x="34.3157%" y="191.50"></text></g><g><title>do_syscall_64 (21 samples, 0.02%)</title><rect x="34.0646%" y="213" width="0.0224%" height="15" fill="rgb(236,202,9)" fg:x="31940" fg:w="21"/><text x="34.3146%" y="223.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (22 samples, 0.02%)</title><rect x="34.0646%" y="229" width="0.0235%" height="15" fill="rgb(250,229,37)" fg:x="31940" fg:w="22"/><text x="34.3146%" y="239.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read_buf (26 samples, 0.03%)</title><rect x="34.0646%" y="261" width="0.0277%" height="15" fill="rgb(206,174,23)" fg:x="31940" fg:w="26"/><text x="34.3146%" y="271.50"></text></g><g><title>__libc_read (26 samples, 0.03%)</title><rect x="34.0646%" y="245" width="0.0277%" height="15" fill="rgb(211,33,43)" fg:x="31940" fg:w="26"/><text x="34.3146%" y="255.50"></text></g><g><title>__memmove_avx_unaligned_erms (22 samples, 0.02%)</title><rect x="34.1169%" y="245" width="0.0235%" height="15" fill="rgb(245,58,50)" fg:x="31989" fg:w="22"/><text x="34.3669%" y="255.50"></text></g><g><title>__GI___libc_malloc (43 samples, 0.05%)</title><rect x="34.2022%" y="213" width="0.0459%" height="15" fill="rgb(244,68,36)" fg:x="32069" fg:w="43"/><text x="34.4522%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (161 samples, 0.17%)</title><rect x="34.0923%" y="261" width="0.1717%" height="15" fill="rgb(232,229,15)" fg:x="31966" fg:w="161"/><text x="34.3423%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (116 samples, 0.12%)</title><rect x="34.1403%" y="245" width="0.1237%" height="15" fill="rgb(254,30,23)" fg:x="32011" fg:w="116"/><text x="34.3903%" y="255.50"></text></g><g><title>alloc::raw_vec::finish_grow (83 samples, 0.09%)</title><rect x="34.1755%" y="229" width="0.0885%" height="15" fill="rgb(235,160,14)" fg:x="32044" fg:w="83"/><text x="34.4255%" y="239.50"></text></g><g><title>core::slice::memchr::memchr_aligned (79 samples, 0.08%)</title><rect x="34.2640%" y="261" width="0.0843%" height="15" fill="rgb(212,155,44)" fg:x="32127" fg:w="79"/><text x="34.5140%" y="271.50"></text></g><g><title>&lt;std::io::Lines&lt;B&gt; as core::iter::traits::iterator::Iterator&gt;::next (493 samples, 0.53%)</title><rect x="33.9110%" y="293" width="0.5258%" height="15" fill="rgb(226,2,50)" fg:x="31796" fg:w="493"/><text x="34.1610%" y="303.50"></text></g><g><title>std::io::append_to_string (449 samples, 0.48%)</title><rect x="33.9580%" y="277" width="0.4789%" height="15" fill="rgb(234,177,6)" fg:x="31840" fg:w="449"/><text x="34.2080%" y="287.50"></text></g><g><title>core::str::converts::from_utf8 (83 samples, 0.09%)</title><rect x="34.3483%" y="261" width="0.0885%" height="15" fill="rgb(217,24,9)" fg:x="32206" fg:w="83"/><text x="34.5983%" y="271.50"></text></g><g><title>__GI___libc_free (22 samples, 0.02%)</title><rect x="34.4368%" y="293" width="0.0235%" height="15" fill="rgb(220,13,46)" fg:x="32289" fg:w="22"/><text x="34.6868%" y="303.50"></text></g><g><title>__GI___libc_malloc (126 samples, 0.13%)</title><rect x="34.4603%" y="293" width="0.1344%" height="15" fill="rgb(239,221,27)" fg:x="32311" fg:w="126"/><text x="34.7103%" y="303.50"></text></g><g><title>__rdl_alloc (10 samples, 0.01%)</title><rect x="34.5957%" y="293" width="0.0107%" height="15" fill="rgb(222,198,25)" fg:x="32438" fg:w="10"/><text x="34.8457%" y="303.50"></text></g><g><title>_int_free (59 samples, 0.06%)</title><rect x="34.6171%" y="293" width="0.0629%" height="15" fill="rgb(211,99,13)" fg:x="32458" fg:w="59"/><text x="34.8671%" y="303.50"></text></g><g><title>__GI___libc_malloc (76 samples, 0.08%)</title><rect x="34.7632%" y="261" width="0.0811%" height="15" fill="rgb(232,111,31)" fg:x="32595" fg:w="76"/><text x="35.0132%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (165 samples, 0.18%)</title><rect x="34.6800%" y="293" width="0.1760%" height="15" fill="rgb(245,82,37)" fg:x="32517" fg:w="165"/><text x="34.9300%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (124 samples, 0.13%)</title><rect x="34.7237%" y="277" width="0.1322%" height="15" fill="rgb(227,149,46)" fg:x="32558" fg:w="124"/><text x="34.9737%" y="287.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (48 samples, 0.05%)</title><rect x="34.8560%" y="293" width="0.0512%" height="15" fill="rgb(218,36,50)" fg:x="32682" fg:w="48"/><text x="35.1060%" y="303.50"></text></g><g><title>_int_free (43 samples, 0.05%)</title><rect x="34.8613%" y="277" width="0.0459%" height="15" fill="rgb(226,80,48)" fg:x="32687" fg:w="43"/><text x="35.1113%" y="287.50"></text></g><g><title>malloc_consolidate (37 samples, 0.04%)</title><rect x="34.8677%" y="261" width="0.0395%" height="15" fill="rgb(238,224,15)" fg:x="32693" fg:w="37"/><text x="35.1177%" y="271.50"></text></g><g><title>core::num::&lt;impl core::str::traits::FromStr for i64&gt;::from_str (193 samples, 0.21%)</title><rect x="34.9082%" y="293" width="0.2058%" height="15" fill="rgb(241,136,10)" fg:x="32731" fg:w="193"/><text x="35.1582%" y="303.50"></text></g><g><title>core::num::from_str_radix (184 samples, 0.20%)</title><rect x="34.9178%" y="277" width="0.1962%" height="15" fill="rgb(208,32,45)" fg:x="32740" fg:w="184"/><text x="35.1678%" y="287.50"></text></g><g><title>__GI___libc_free (14 samples, 0.01%)</title><rect x="35.1877%" y="277" width="0.0149%" height="15" fill="rgb(207,135,9)" fg:x="32993" fg:w="14"/><text x="35.4377%" y="287.50"></text></g><g><title>__GI___libc_malloc (30 samples, 0.03%)</title><rect x="35.2026%" y="277" width="0.0320%" height="15" fill="rgb(206,86,44)" fg:x="33007" fg:w="30"/><text x="35.4526%" y="287.50"></text></g><g><title>__memmove_avx_unaligned_erms (10 samples, 0.01%)</title><rect x="35.2346%" y="277" width="0.0107%" height="15" fill="rgb(245,177,15)" fg:x="33037" fg:w="10"/><text x="35.4846%" y="287.50"></text></g><g><title>rucene::core::doc::field::Field::new_bytes (159 samples, 0.17%)</title><rect x="35.1237%" y="293" width="0.1696%" height="15" fill="rgb(206,64,50)" fg:x="32933" fg:w="159"/><text x="35.3737%" y="303.50"></text></g><g><title>_int_free (37 samples, 0.04%)</title><rect x="35.2538%" y="277" width="0.0395%" height="15" fill="rgb(234,36,40)" fg:x="33055" fg:w="37"/><text x="35.5038%" y="287.50"></text></g><g><title>mpage_map_and_submit_extent (10 samples, 0.01%)</title><rect x="35.2986%" y="85" width="0.0107%" height="15" fill="rgb(213,64,8)" fg:x="33097" fg:w="10"/><text x="35.5486%" y="95.50"></text></g><g><title>std::fs::File::sync_all (17 samples, 0.02%)</title><rect x="35.2954%" y="245" width="0.0181%" height="15" fill="rgb(210,75,36)" fg:x="33094" fg:w="17"/><text x="35.5454%" y="255.50"></text></g><g><title>fsync (17 samples, 0.02%)</title><rect x="35.2954%" y="229" width="0.0181%" height="15" fill="rgb(229,88,21)" fg:x="33094" fg:w="17"/><text x="35.5454%" y="239.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (17 samples, 0.02%)</title><rect x="35.2954%" y="213" width="0.0181%" height="15" fill="rgb(252,204,47)" fg:x="33094" fg:w="17"/><text x="35.5454%" y="223.50"></text></g><g><title>do_syscall_64 (17 samples, 0.02%)</title><rect x="35.2954%" y="197" width="0.0181%" height="15" fill="rgb(208,77,27)" fg:x="33094" fg:w="17"/><text x="35.5454%" y="207.50"></text></g><g><title>__x64_sys_fsync (17 samples, 0.02%)</title><rect x="35.2954%" y="181" width="0.0181%" height="15" fill="rgb(221,76,26)" fg:x="33094" fg:w="17"/><text x="35.5454%" y="191.50"></text></g><g><title>ext4_sync_file (17 samples, 0.02%)</title><rect x="35.2954%" y="165" width="0.0181%" height="15" fill="rgb(225,139,18)" fg:x="33094" fg:w="17"/><text x="35.5454%" y="175.50"></text></g><g><title>file_write_and_wait_range (17 samples, 0.02%)</title><rect x="35.2954%" y="149" width="0.0181%" height="15" fill="rgb(230,137,11)" fg:x="33094" fg:w="17"/><text x="35.5454%" y="159.50"></text></g><g><title>__filemap_fdatawrite_range (15 samples, 0.02%)</title><rect x="35.2975%" y="133" width="0.0160%" height="15" fill="rgb(212,28,1)" fg:x="33096" fg:w="15"/><text x="35.5475%" y="143.50"></text></g><g><title>do_writepages (15 samples, 0.02%)</title><rect x="35.2975%" y="117" width="0.0160%" height="15" fill="rgb(248,164,17)" fg:x="33096" fg:w="15"/><text x="35.5475%" y="127.50"></text></g><g><title>ext4_writepages (15 samples, 0.02%)</title><rect x="35.2975%" y="101" width="0.0160%" height="15" fill="rgb(222,171,42)" fg:x="33096" fg:w="15"/><text x="35.5475%" y="111.50"></text></g><g><title>&lt;rucene::core::store::directory::fs_directory::FSDirectory as rucene::core::store::directory::directory::Directory&gt;::sync (19 samples, 0.02%)</title><rect x="35.2943%" y="277" width="0.0203%" height="15" fill="rgb(243,84,45)" fg:x="33093" fg:w="19"/><text x="35.5443%" y="287.50"></text></g><g><title>rucene::core::store::directory::fs_directory::FSDirectory::fsync (19 samples, 0.02%)</title><rect x="35.2943%" y="261" width="0.0203%" height="15" fill="rgb(252,49,23)" fg:x="33093" fg:w="19"/><text x="35.5443%" y="271.50"></text></g><g><title>rucene::core::index::writer::index_writer::IndexWriterInner&lt;D,C,MS,MP&gt;::commit (22 samples, 0.02%)</title><rect x="35.2943%" y="293" width="0.0235%" height="15" fill="rgb(215,19,7)" fg:x="33093" fg:w="22"/><text x="35.5443%" y="303.50"></text></g><g><title>&lt;rucene::core::store::directory::fs_directory::FSDirectory as rucene::core::store::directory::directory::Directory&gt;::open_input (12 samples, 0.01%)</title><rect x="35.3263%" y="101" width="0.0128%" height="15" fill="rgb(238,81,41)" fg:x="33123" fg:w="12"/><text x="35.5763%" y="111.50"></text></g><g><title>rucene::core::store::io::mmap_index_input::MmapIndexInput::mmap (11 samples, 0.01%)</title><rect x="35.3274%" y="85" width="0.0117%" height="15" fill="rgb(210,199,37)" fg:x="33124" fg:w="11"/><text x="35.5774%" y="95.50"></text></g><g><title>rucene::core::index::reader::segment_reader::SegmentReader&lt;D,C&gt;::build (22 samples, 0.02%)</title><rect x="35.3178%" y="229" width="0.0235%" height="15" fill="rgb(244,192,49)" fg:x="33115" fg:w="22"/><text x="35.5678%" y="239.50"></text></g><g><title>rucene::core::index::reader::segment_reader::SegmentReader&lt;D,C&gt;::new (22 samples, 0.02%)</title><rect x="35.3178%" y="213" width="0.0235%" height="15" fill="rgb(226,211,11)" fg:x="33115" fg:w="22"/><text x="35.5678%" y="223.50"></text></g><g><title>rucene::core::index::reader::segment_reader::SegmentReader&lt;D,C&gt;::get_dv_producer (14 samples, 0.01%)</title><rect x="35.3263%" y="197" width="0.0149%" height="15" fill="rgb(236,162,54)" fg:x="33123" fg:w="14"/><text x="35.5763%" y="207.50"></text></g><g><title>rucene::core::index::reader::segment_reader::SegmentDocValues::get_dv_producer (14 samples, 0.01%)</title><rect x="35.3263%" y="181" width="0.0149%" height="15" fill="rgb(220,229,9)" fg:x="33123" fg:w="14"/><text x="35.5763%" y="191.50"></text></g><g><title>&lt;rucene::core::codec::doc_values::doc_values_format::DocValuesFormatEnum as rucene::core::codec::doc_values::doc_values_format::DocValuesFormat&gt;::fields_producer (14 samples, 0.01%)</title><rect x="35.3263%" y="165" width="0.0149%" height="15" fill="rgb(250,87,22)" fg:x="33123" fg:w="14"/><text x="35.5763%" y="175.50"></text></g><g><title>&lt;rucene::core::codec::doc_values::doc_values_format::DocValuesFormatEnum as rucene::core::codec::doc_values::doc_values_format::DocValuesFormat&gt;::fields_producer (14 samples, 0.01%)</title><rect x="35.3263%" y="149" width="0.0149%" height="15" fill="rgb(239,43,17)" fg:x="33123" fg:w="14"/><text x="35.5763%" y="159.50"></text></g><g><title>&lt;rucene::core::codec::doc_values::lucene54::lucene54_doc_values_format::Lucene54DocValuesFormat as rucene::core::codec::doc_values::doc_values_format::DocValuesFormat&gt;::fields_producer (14 samples, 0.01%)</title><rect x="35.3263%" y="133" width="0.0149%" height="15" fill="rgb(231,177,25)" fg:x="33123" fg:w="14"/><text x="35.5763%" y="143.50"></text></g><g><title>rucene::core::codec::doc_values::lucene54::lucene54_doc_values_producer::Lucene54DocValuesProducer::new (14 samples, 0.01%)</title><rect x="35.3263%" y="117" width="0.0149%" height="15" fill="rgb(219,179,1)" fg:x="33123" fg:w="14"/><text x="35.5763%" y="127.50"></text></g><g><title>rucene::core::index::writer::index_writer::IndexWriterInner&lt;D,C,MS,MP&gt;::get_reader (31 samples, 0.03%)</title><rect x="35.3178%" y="293" width="0.0331%" height="15" fill="rgb(238,219,53)" fg:x="33115" fg:w="31"/><text x="35.5678%" y="303.50"></text></g><g><title>rucene::core::index::reader::directory_reader::StandardDirectoryReader&lt;D,C,MS,MP&gt;::open_by_writer (31 samples, 0.03%)</title><rect x="35.3178%" y="277" width="0.0331%" height="15" fill="rgb(232,167,36)" fg:x="33115" fg:w="31"/><text x="35.5678%" y="287.50"></text></g><g><title>rucene::core::index::writer::index_writer::ReadersAndUpdates&lt;D,C,MS,MP&gt;::get_readonly_clone (31 samples, 0.03%)</title><rect x="35.3178%" y="261" width="0.0331%" height="15" fill="rgb(244,19,51)" fg:x="33115" fg:w="31"/><text x="35.5678%" y="271.50"></text></g><g><title>rucene::core::index::writer::index_writer::ReadersAndUpdatesInner&lt;D,C,MS,MP&gt;::get_readonly_clone (31 samples, 0.03%)</title><rect x="35.3178%" y="245" width="0.0331%" height="15" fill="rgb(224,6,22)" fg:x="33115" fg:w="31"/><text x="35.5678%" y="255.50"></text></g><g><title>__GI___libc_free (16 samples, 0.02%)</title><rect x="36.3267%" y="229" width="0.0171%" height="15" fill="rgb(224,145,5)" fg:x="34061" fg:w="16"/><text x="36.5767%" y="239.50"></text></g><g><title>_int_free (47 samples, 0.05%)</title><rect x="36.3491%" y="229" width="0.0501%" height="15" fill="rgb(234,130,49)" fg:x="34082" fg:w="47"/><text x="36.5991%" y="239.50"></text></g><g><title>__GI___libc_free (33 samples, 0.04%)</title><rect x="36.4312%" y="213" width="0.0352%" height="15" fill="rgb(254,6,2)" fg:x="34159" fg:w="33"/><text x="36.6812%" y="223.50"></text></g><g><title>__rdl_dealloc (10 samples, 0.01%)</title><rect x="36.4664%" y="213" width="0.0107%" height="15" fill="rgb(208,96,46)" fg:x="34192" fg:w="10"/><text x="36.7164%" y="223.50"></text></g><g><title>_int_free (293 samples, 0.31%)</title><rect x="36.4867%" y="213" width="0.3125%" height="15" fill="rgb(239,3,39)" fg:x="34211" fg:w="293"/><text x="36.7367%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (476 samples, 0.51%)</title><rect x="36.2926%" y="245" width="0.5077%" height="15" fill="rgb(233,210,1)" fg:x="34029" fg:w="476"/><text x="36.5426%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;rucene::core::doc::field::Field&gt; (376 samples, 0.40%)</title><rect x="36.3992%" y="229" width="0.4010%" height="15" fill="rgb(244,137,37)" fg:x="34129" fg:w="376"/><text x="36.6492%" y="239.50"></text></g><g><title>__GI___libc_free (10 samples, 0.01%)</title><rect x="36.8002%" y="245" width="0.0107%" height="15" fill="rgb(240,136,2)" fg:x="34505" fg:w="10"/><text x="37.0502%" y="255.50"></text></g><g><title>_int_free (45 samples, 0.05%)</title><rect x="36.8184%" y="245" width="0.0480%" height="15" fill="rgb(239,18,37)" fg:x="34522" fg:w="45"/><text x="37.0684%" y="255.50"></text></g><g><title>rucene::core::codec::stored_fields::stored_fields_writer::CompressingStoredFieldsWriter&lt;O&gt;::save_ints (20 samples, 0.02%)</title><rect x="37.2055%" y="197" width="0.0213%" height="15" fill="rgb(218,185,22)" fg:x="34885" fg:w="20"/><text x="37.4555%" y="207.50"></text></g><g><title>&lt;rucene::core::codec::stored_fields::stored_fields_writer::CompressingStoredFieldsWriter&lt;O&gt; as rucene::core::codec::stored_fields::StoredFieldsWriter&gt;::finish_document (79 samples, 0.08%)</title><rect x="37.1490%" y="229" width="0.0843%" height="15" fill="rgb(225,218,4)" fg:x="34832" fg:w="79"/><text x="37.3990%" y="239.50"></text></g><g><title>rucene::core::codec::stored_fields::stored_fields_writer::CompressingStoredFieldsWriter&lt;O&gt;::flush (41 samples, 0.04%)</title><rect x="37.1895%" y="213" width="0.0437%" height="15" fill="rgb(230,182,32)" fg:x="34870" fg:w="41"/><text x="37.4395%" y="223.50"></text></g><g><title>&lt;rucene::core::doc::field::Field as rucene::core::doc::field::Fieldable&gt;::binary_value (16 samples, 0.02%)</title><rect x="37.2332%" y="229" width="0.0171%" height="15" fill="rgb(242,56,43)" fg:x="34911" fg:w="16"/><text x="37.4832%" y="239.50"></text></g><g><title>&lt;rucene::core::doc::field::Field as rucene::core::doc::field::Fieldable&gt;::field_type (22 samples, 0.02%)</title><rect x="37.2503%" y="229" width="0.0235%" height="15" fill="rgb(233,99,24)" fg:x="34927" fg:w="22"/><text x="37.5003%" y="239.50"></text></g><g><title>__memmove_avx_unaligned_erms (26 samples, 0.03%)</title><rect x="37.4252%" y="197" width="0.0277%" height="15" fill="rgb(234,209,42)" fg:x="35091" fg:w="26"/><text x="37.6752%" y="207.50"></text></g><g><title>__memset_avx2_erms (16 samples, 0.02%)</title><rect x="37.4572%" y="165" width="0.0171%" height="15" fill="rgb(227,7,12)" fg:x="35121" fg:w="16"/><text x="37.7072%" y="175.50"></text></g><g><title>asm_exc_page_fault (11 samples, 0.01%)</title><rect x="37.4625%" y="149" width="0.0117%" height="15" fill="rgb(245,203,43)" fg:x="35126" fg:w="11"/><text x="37.7125%" y="159.50"></text></g><g><title>exc_page_fault (11 samples, 0.01%)</title><rect x="37.4625%" y="133" width="0.0117%" height="15" fill="rgb(238,205,33)" fg:x="35126" fg:w="11"/><text x="37.7125%" y="143.50"></text></g><g><title>do_user_addr_fault (11 samples, 0.01%)</title><rect x="37.4625%" y="117" width="0.0117%" height="15" fill="rgb(231,56,7)" fg:x="35126" fg:w="11"/><text x="37.7125%" y="127.50"></text></g><g><title>handle_mm_fault (11 samples, 0.01%)</title><rect x="37.4625%" y="101" width="0.0117%" height="15" fill="rgb(244,186,29)" fg:x="35126" fg:w="11"/><text x="37.7125%" y="111.50"></text></g><g><title>__handle_mm_fault (11 samples, 0.01%)</title><rect x="37.4625%" y="85" width="0.0117%" height="15" fill="rgb(234,111,31)" fg:x="35126" fg:w="11"/><text x="37.7125%" y="95.50"></text></g><g><title>do_anonymous_page (11 samples, 0.01%)</title><rect x="37.4625%" y="69" width="0.0117%" height="15" fill="rgb(241,149,10)" fg:x="35126" fg:w="11"/><text x="37.7125%" y="79.50"></text></g><g><title>__calloc (22 samples, 0.02%)</title><rect x="37.4572%" y="181" width="0.0235%" height="15" fill="rgb(249,206,44)" fg:x="35121" fg:w="22"/><text x="37.7072%" y="191.50"></text></g><g><title>asm_exc_page_fault (10 samples, 0.01%)</title><rect x="37.4871%" y="165" width="0.0107%" height="15" fill="rgb(251,153,30)" fg:x="35149" fg:w="10"/><text x="37.7371%" y="175.50"></text></g><g><title>&lt;rucene::core::util::paged_bytes::PagedBytesDataOutput as rucene::core::store::io::data_output::DataOutput&gt;::write_bytes (125 samples, 0.13%)</title><rect x="37.3655%" y="213" width="0.1333%" height="15" fill="rgb(239,152,38)" fg:x="35035" fg:w="125"/><text x="37.6155%" y="223.50"></text></g><g><title>rucene::core::util::paged_bytes::PagedBytes::add_block (43 samples, 0.05%)</title><rect x="37.4529%" y="197" width="0.0459%" height="15" fill="rgb(249,139,47)" fg:x="35117" fg:w="43"/><text x="37.7029%" y="207.50"></text></g><g><title>__memmove_avx_unaligned_erms (17 samples, 0.02%)</title><rect x="37.4807%" y="181" width="0.0181%" height="15" fill="rgb(244,64,35)" fg:x="35143" fg:w="17"/><text x="37.7307%" y="191.50"></text></g><g><title>rucene::core::codec::doc_values::doc_values_writer::BinaryDocValuesWriter::add_value (232 samples, 0.25%)</title><rect x="37.2812%" y="229" width="0.2474%" height="15" fill="rgb(216,46,15)" fg:x="34956" fg:w="232"/><text x="37.5312%" y="239.50"></text></g><g><title>rucene::core::util::packed::packed_long_values::PackedLongValuesBuilder::pack (21 samples, 0.02%)</title><rect x="37.5063%" y="213" width="0.0224%" height="15" fill="rgb(250,74,19)" fg:x="35167" fg:w="21"/><text x="37.7563%" y="223.50"></text></g><g><title>rucene::core::codec::field_infos::FieldInfo::set_doc_values_type (57 samples, 0.06%)</title><rect x="37.5287%" y="229" width="0.0608%" height="15" fill="rgb(249,42,33)" fg:x="35188" fg:w="57"/><text x="37.7787%" y="239.50"></text></g><g><title>rucene::core::codec::field_infos::FieldInfo::check_consistency (39 samples, 0.04%)</title><rect x="37.5479%" y="213" width="0.0416%" height="15" fill="rgb(242,149,17)" fg:x="35206" fg:w="39"/><text x="37.7979%" y="223.50"></text></g><g><title>__memmove_avx_unaligned_erms (16 samples, 0.02%)</title><rect x="37.6716%" y="149" width="0.0171%" height="15" fill="rgb(244,29,21)" fg:x="35322" fg:w="16"/><text x="37.9216%" y="159.50"></text></g><g><title>asm_exc_page_fault (10 samples, 0.01%)</title><rect x="37.6780%" y="133" width="0.0107%" height="15" fill="rgb(220,130,37)" fg:x="35328" fg:w="10"/><text x="37.9280%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (17 samples, 0.02%)</title><rect x="37.6716%" y="213" width="0.0181%" height="15" fill="rgb(211,67,2)" fg:x="35322" fg:w="17"/><text x="37.9216%" y="223.50"></text></g><g><title>alloc::raw_vec::finish_grow (17 samples, 0.02%)</title><rect x="37.6716%" y="197" width="0.0181%" height="15" fill="rgb(235,68,52)" fg:x="35322" fg:w="17"/><text x="37.9216%" y="207.50"></text></g><g><title>__GI___libc_realloc (17 samples, 0.02%)</title><rect x="37.6716%" y="181" width="0.0181%" height="15" fill="rgb(246,142,3)" fg:x="35322" fg:w="17"/><text x="37.9216%" y="191.50"></text></g><g><title>_int_realloc (17 samples, 0.02%)</title><rect x="37.6716%" y="165" width="0.0181%" height="15" fill="rgb(241,25,7)" fg:x="35322" fg:w="17"/><text x="37.9216%" y="175.50"></text></g><g><title>__memmove_avx_unaligned_erms (35 samples, 0.04%)</title><rect x="37.7622%" y="197" width="0.0373%" height="15" fill="rgb(242,119,39)" fg:x="35407" fg:w="35"/><text x="38.0122%" y="207.50"></text></g><g><title>rucene::core::codec::points::point_values_writer::PointValuesWriter::add_packed_value (199 samples, 0.21%)</title><rect x="37.5895%" y="229" width="0.2122%" height="15" fill="rgb(241,98,45)" fg:x="35245" fg:w="199"/><text x="37.8395%" y="239.50"></text></g><g><title>rucene::core::util::byte_block_pool::ByteBlockPool::append (95 samples, 0.10%)</title><rect x="37.7004%" y="213" width="0.1013%" height="15" fill="rgb(254,28,30)" fg:x="35349" fg:w="95"/><text x="37.9504%" y="223.50"></text></g><g><title>rucene::core::index::writer::doc_consumer::DocConsumer&lt;D,C,MS,MP&gt;::process_document (888 samples, 0.95%)</title><rect x="36.8664%" y="245" width="0.9471%" height="15" fill="rgb(241,142,54)" fg:x="34567" fg:w="888"/><text x="37.1164%" y="255.50"></text></g><g><title>rucene::core::index::writer::doc_consumer::DocConsumer&lt;D,C,MS,MP&gt;::get_or_add_field (11 samples, 0.01%)</title><rect x="37.8017%" y="229" width="0.0117%" height="15" fill="rgb(222,85,15)" fg:x="35444" fg:w="11"/><text x="38.0517%" y="239.50"></text></g><g><title>rucene::core::index::writer::doc_writer_per_thread::DocumentsWriterPerThread&lt;D,C,MS,MP&gt;::update_document (1,964 samples, 2.09%)</title><rect x="36.1070%" y="261" width="2.0946%" height="15" fill="rgb(210,85,47)" fg:x="33855" fg:w="1964"/><text x="36.3570%" y="271.50">r..</text></g><g><title>rucene::core::index::writer::doc_writer_per_thread::DocumentsWriterPerThread&lt;D,C,MS,MP&gt;::finish_document (364 samples, 0.39%)</title><rect x="37.8134%" y="245" width="0.3882%" height="15" fill="rgb(224,206,25)" fg:x="35455" fg:w="364"/><text x="38.0634%" y="255.50"></text></g><g><title>rucene::core::index::writer::doc_writer_per_thread::DocumentsWriterPerThreadPool&lt;D,C,MS,MP&gt;::get_and_lock (241 samples, 0.26%)</title><rect x="38.2016%" y="261" width="0.2570%" height="15" fill="rgb(243,201,19)" fg:x="35819" fg:w="241"/><text x="38.4516%" y="271.50"></text></g><g><title>rucene::core::index::writer::doc_writer_per_thread::DocumentsWriterPerThreadPool&lt;D,C,MS,MP&gt;::release (224 samples, 0.24%)</title><rect x="38.4587%" y="261" width="0.2389%" height="15" fill="rgb(236,59,4)" fg:x="36060" fg:w="224"/><text x="38.7087%" y="271.50"></text></g><g><title>rucene::core::index::writer::index_writer::IndexWriterInner&lt;D,C,MS,MP&gt;::update_document (3,314 samples, 3.53%)</title><rect x="35.3508%" y="293" width="3.5344%" height="15" fill="rgb(254,179,45)" fg:x="33146" fg:w="3314"/><text x="35.6008%" y="303.50">ruc..</text></g><g><title>rucene::core::index::writer::doc_writer::DocumentsWriter&lt;D,C,MS,MP&gt;::update_document (3,254 samples, 3.47%)</title><rect x="35.4148%" y="277" width="3.4705%" height="15" fill="rgb(226,14,10)" fg:x="33206" fg:w="3254"/><text x="35.6648%" y="287.50">ruc..</text></g><g><title>rucene::core::index::writer::flush_control::DocumentsWriterFlushControl&lt;D,C,MS,MP&gt;::do_after_document (176 samples, 0.19%)</title><rect x="38.6976%" y="261" width="0.1877%" height="15" fill="rgb(244,27,41)" fg:x="36284" fg:w="176"/><text x="38.9476%" y="271.50"></text></g><g><title>__calloc (12 samples, 0.01%)</title><rect x="38.9013%" y="261" width="0.0128%" height="15" fill="rgb(235,35,32)" fg:x="36475" fg:w="12"/><text x="39.1513%" y="271.50"></text></g><g><title>rucene::core::search::query::point_range_query::LongPoint::new_multi_range_query (22 samples, 0.02%)</title><rect x="38.8917%" y="293" width="0.0235%" height="15" fill="rgb(218,68,31)" fg:x="36466" fg:w="22"/><text x="39.1417%" y="303.50"></text></g><g><title>rucene::core::search::query::point_range_query::LongPoint::pack (13 samples, 0.01%)</title><rect x="38.9013%" y="277" width="0.0139%" height="15" fill="rgb(207,120,37)" fg:x="36475" fg:w="13"/><text x="39.1513%" y="287.50"></text></g><g><title>__calloc (385 samples, 0.41%)</title><rect x="38.9663%" y="277" width="0.4106%" height="15" fill="rgb(227,98,0)" fg:x="36536" fg:w="385"/><text x="39.2163%" y="287.50"></text></g><g><title>_int_malloc (221 samples, 0.24%)</title><rect x="39.1412%" y="261" width="0.2357%" height="15" fill="rgb(207,7,3)" fg:x="36700" fg:w="221"/><text x="39.3912%" y="271.50"></text></g><g><title>rucene::core::search::query::point_range_query::LongPoint::pack (475 samples, 0.51%)</title><rect x="38.9151%" y="293" width="0.5066%" height="15" fill="rgb(206,98,19)" fg:x="36488" fg:w="475"/><text x="39.1651%" y="303.50"></text></g><g><title>rucene::core::util::numeric::long2sortable_bytes (30 samples, 0.03%)</title><rect x="39.3897%" y="277" width="0.0320%" height="15" fill="rgb(217,5,26)" fg:x="36933" fg:w="30"/><text x="39.6397%" y="287.50"></text></g><g><title>&lt;rucene::core::util::doc_id_set::DocIdSetDocIterEnum as rucene::core::search::DocIterator&gt;::next (20,603 samples, 21.97%)</title><rect x="60.6241%" y="245" width="21.9735%" height="15" fill="rgb(235,190,38)" fg:x="56843" fg:w="20603"/><text x="60.8741%" y="255.50">&lt;rucene::core::util::doc_id_set::Do..</text></g><g><title>&lt;rucene::core::search::query::point_range_query::PointDocIterEnum as rucene::core::search::DocIterator&gt;::next (23,846 samples, 25.43%)</title><rect x="57.1686%" y="261" width="25.4322%" height="15" fill="rgb(247,86,24)" fg:x="53603" fg:w="23846"/><text x="57.4186%" y="271.50">&lt;rucene::core::search::query::point_range..</text></g><g><title>&lt;rucene::core::search::scorer::ConstantScoreScorer&lt;T&gt; as rucene::core::search::DocIterator&gt;::next (29,917 samples, 31.91%)</title><rect x="50.6948%" y="277" width="31.9070%" height="15" fill="rgb(205,101,16)" fg:x="47533" fg:w="29917"/><text x="50.9448%" y="287.50">&lt;rucene::core::search::scorer::ConstantScoreScorer&lt;T..</text></g><g><title>&lt;rucene::core::search::scorer::ConstantScoreScorer&lt;T&gt; as rucene::core::search::scorer::Scorer&gt;::score (2,232 samples, 2.38%)</title><rect x="82.6019%" y="277" width="2.3805%" height="15" fill="rgb(246,168,33)" fg:x="77450" fg:w="2232"/><text x="82.8519%" y="287.50">&lt;r..</text></g><g><title>&lt;rucene::core::util::bits::MatchAllBits as rucene::core::util::bits::Bits&gt;::get (2,249 samples, 2.40%)</title><rect x="84.9823%" y="277" width="2.3986%" height="15" fill="rgb(231,114,1)" fg:x="79682" fg:w="2249"/><text x="85.2323%" y="287.50">&lt;r..</text></g><g><title>rucene::core::search::scorer::bulk_scorer::BulkScorer&lt;S&gt;::score (52,751 samples, 56.26%)</title><rect x="39.4217%" y="293" width="56.2599%" height="15" fill="rgb(207,184,53)" fg:x="36963" fg:w="52751"/><text x="39.6717%" y="303.50">rucene::core::search::scorer::bulk_scorer::BulkScorer&lt;S&gt;::score</text></g><g><title>rucene::core::search::collector::top_docs::TopDocsBaseCollector::add_doc (7,775 samples, 8.29%)</title><rect x="87.3895%" y="277" width="8.2922%" height="15" fill="rgb(224,95,51)" fg:x="81939" fg:w="7775"/><text x="87.6395%" y="287.50">rucene::core..</text></g><g><title>std::sys::pal::unix::fs::remove_dir_impl::remove_dir_all (19 samples, 0.02%)</title><rect x="95.6817%" y="293" width="0.0203%" height="15" fill="rgb(212,188,45)" fg:x="89714" fg:w="19"/><text x="95.9317%" y="303.50"></text></g><g><title>std::sys::pal::unix::fs::remove_dir_impl::remove_dir_all_recursive (19 samples, 0.02%)</title><rect x="95.6817%" y="277" width="0.0203%" height="15" fill="rgb(223,154,38)" fg:x="89714" fg:w="19"/><text x="95.9317%" y="287.50"></text></g><g><title>__GI_unlinkat (19 samples, 0.02%)</title><rect x="95.6817%" y="261" width="0.0203%" height="15" fill="rgb(251,22,52)" fg:x="89714" fg:w="19"/><text x="95.9317%" y="271.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (19 samples, 0.02%)</title><rect x="95.6817%" y="245" width="0.0203%" height="15" fill="rgb(229,209,22)" fg:x="89714" fg:w="19"/><text x="95.9317%" y="255.50"></text></g><g><title>do_syscall_64 (19 samples, 0.02%)</title><rect x="95.6817%" y="229" width="0.0203%" height="15" fill="rgb(234,138,34)" fg:x="89714" fg:w="19"/><text x="95.9317%" y="239.50"></text></g><g><title>do_unlinkat (19 samples, 0.02%)</title><rect x="95.6817%" y="213" width="0.0203%" height="15" fill="rgb(212,95,11)" fg:x="89714" fg:w="19"/><text x="95.9317%" y="223.50"></text></g><g><title>evict (19 samples, 0.02%)</title><rect x="95.6817%" y="197" width="0.0203%" height="15" fill="rgb(240,179,47)" fg:x="89714" fg:w="19"/><text x="95.9317%" y="207.50"></text></g><g><title>ext4_evict_inode (19 samples, 0.02%)</title><rect x="95.6817%" y="181" width="0.0203%" height="15" fill="rgb(240,163,11)" fg:x="89714" fg:w="19"/><text x="95.9317%" y="191.50"></text></g><g><title>truncate_inode_pages_range (19 samples, 0.02%)</title><rect x="95.6817%" y="165" width="0.0203%" height="15" fill="rgb(236,37,12)" fg:x="89714" fg:w="19"/><text x="95.9317%" y="175.50"></text></g><g><title>__libc_start_main (86,366 samples, 92.11%)</title><rect x="3.5952%" y="389" width="92.1110%" height="15" fill="rgb(232,164,16)" fg:x="3371" fg:w="86366"/><text x="3.8452%" y="399.50">__libc_start_main</text></g><g><title>main (86,366 samples, 92.11%)</title><rect x="3.5952%" y="373" width="92.1110%" height="15" fill="rgb(244,205,15)" fg:x="3371" fg:w="86366"/><text x="3.8452%" y="383.50">main</text></g><g><title>std::rt::lang_start_internal (86,366 samples, 92.11%)</title><rect x="3.5952%" y="357" width="92.1110%" height="15" fill="rgb(223,117,47)" fg:x="3371" fg:w="86366"/><text x="3.8452%" y="367.50">std::rt::lang_start_internal</text></g><g><title>std::rt::lang_start::_{{closure}} (86,366 samples, 92.11%)</title><rect x="3.5952%" y="341" width="92.1110%" height="15" fill="rgb(244,107,35)" fg:x="3371" fg:w="86366"/><text x="3.8452%" y="351.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (86,366 samples, 92.11%)</title><rect x="3.5952%" y="325" width="92.1110%" height="15" fill="rgb(205,140,8)" fg:x="3371" fg:w="86366"/><text x="3.8452%" y="335.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>basic_points_range::main (86,366 samples, 92.11%)</title><rect x="3.5952%" y="309" width="92.1110%" height="15" fill="rgb(228,84,46)" fg:x="3371" fg:w="86366"/><text x="3.8452%" y="319.50">basic_points_range::main</text></g><g><title>_start (86,367 samples, 92.11%)</title><rect x="3.5952%" y="405" width="92.1120%" height="15" fill="rgb(254,188,9)" fg:x="3371" fg:w="86367"/><text x="3.8452%" y="415.50">_start</text></g><g><title>__memcmp_avx2_movbe (85 samples, 0.09%)</title><rect x="95.9270%" y="293" width="0.0907%" height="15" fill="rgb(206,112,54)" fg:x="89944" fg:w="85"/><text x="96.1770%" y="303.50"></text></g><g><title>basic_points_range::main (640 samples, 0.68%)</title><rect x="95.7073%" y="405" width="0.6826%" height="15" fill="rgb(216,84,49)" fg:x="89738" fg:w="640"/><text x="95.9573%" y="415.50"></text></g><g><title>rucene::core::index::writer::index_writer::IndexWriterInner&lt;D,C,MS,MP&gt;::update_document (639 samples, 0.68%)</title><rect x="95.7083%" y="389" width="0.6815%" height="15" fill="rgb(214,194,35)" fg:x="89739" fg:w="639"/><text x="95.9583%" y="399.50"></text></g><g><title>rucene::core::index::writer::doc_writer::DocumentsWriter&lt;D,C,MS,MP&gt;::update_document (639 samples, 0.68%)</title><rect x="95.7083%" y="373" width="0.6815%" height="15" fill="rgb(249,28,3)" fg:x="89739" fg:w="639"/><text x="95.9583%" y="383.50"></text></g><g><title>rucene::core::index::writer::doc_writer_per_thread::DocumentsWriterPerThread&lt;D,C,MS,MP&gt;::update_document (639 samples, 0.68%)</title><rect x="95.7083%" y="357" width="0.6815%" height="15" fill="rgb(222,56,52)" fg:x="89739" fg:w="639"/><text x="95.9583%" y="367.50"></text></g><g><title>rucene::core::index::writer::doc_consumer::DocConsumer&lt;D,C,MS,MP&gt;::process_document (639 samples, 0.68%)</title><rect x="95.7083%" y="341" width="0.6815%" height="15" fill="rgb(245,217,50)" fg:x="89739" fg:w="639"/><text x="95.9583%" y="351.50"></text></g><g><title>rucene::core::index::writer::doc_consumer::DocConsumer&lt;D,C,MS,MP&gt;::get_or_add_field (639 samples, 0.68%)</title><rect x="95.7083%" y="325" width="0.6815%" height="15" fill="rgb(213,201,24)" fg:x="89739" fg:w="639"/><text x="95.9583%" y="335.50"></text></g><g><title>rucene::core::codec::field_infos::FieldInfosBuilder&lt;T&gt;::get_or_add (639 samples, 0.68%)</title><rect x="95.7083%" y="309" width="0.6815%" height="15" fill="rgb(248,116,28)" fg:x="89739" fg:w="639"/><text x="95.9583%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (349 samples, 0.37%)</title><rect x="96.0176%" y="293" width="0.3722%" height="15" fill="rgb(219,72,43)" fg:x="90029" fg:w="349"/><text x="96.2676%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (156 samples, 0.17%)</title><rect x="96.2235%" y="277" width="0.1664%" height="15" fill="rgb(209,138,14)" fg:x="90222" fg:w="156"/><text x="96.4735%" y="287.50"></text></g><g><title>__memcmp_avx2_movbe (21 samples, 0.02%)</title><rect x="96.3898%" y="245" width="0.0224%" height="15" fill="rgb(222,18,33)" fg:x="90378" fg:w="21"/><text x="96.6398%" y="255.50"></text></g><g><title>main (31 samples, 0.03%)</title><rect x="96.3898%" y="405" width="0.0331%" height="15" fill="rgb(213,199,7)" fg:x="90378" fg:w="31"/><text x="96.6398%" y="415.50"></text></g><g><title>std::rt::lang_start_internal (31 samples, 0.03%)</title><rect x="96.3898%" y="389" width="0.0331%" height="15" fill="rgb(250,110,10)" fg:x="90378" fg:w="31"/><text x="96.6398%" y="399.50"></text></g><g><title>std::rt::lang_start::_{{closure}} (31 samples, 0.03%)</title><rect x="96.3898%" y="373" width="0.0331%" height="15" fill="rgb(248,123,6)" fg:x="90378" fg:w="31"/><text x="96.6398%" y="383.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (31 samples, 0.03%)</title><rect x="96.3898%" y="357" width="0.0331%" height="15" fill="rgb(206,91,31)" fg:x="90378" fg:w="31"/><text x="96.6398%" y="367.50"></text></g><g><title>basic_points_range::main (31 samples, 0.03%)</title><rect x="96.3898%" y="341" width="0.0331%" height="15" fill="rgb(211,154,13)" fg:x="90378" fg:w="31"/><text x="96.6398%" y="351.50"></text></g><g><title>rucene::core::index::writer::index_writer::IndexWriterInner&lt;D,C,MS,MP&gt;::update_document (31 samples, 0.03%)</title><rect x="96.3898%" y="325" width="0.0331%" height="15" fill="rgb(225,148,7)" fg:x="90378" fg:w="31"/><text x="96.6398%" y="335.50"></text></g><g><title>rucene::core::index::writer::doc_writer::DocumentsWriter&lt;D,C,MS,MP&gt;::update_document (31 samples, 0.03%)</title><rect x="96.3898%" y="309" width="0.0331%" height="15" fill="rgb(220,160,43)" fg:x="90378" fg:w="31"/><text x="96.6398%" y="319.50"></text></g><g><title>rucene::core::index::writer::doc_writer_per_thread::DocumentsWriterPerThread&lt;D,C,MS,MP&gt;::update_document (31 samples, 0.03%)</title><rect x="96.3898%" y="293" width="0.0331%" height="15" fill="rgb(213,52,39)" fg:x="90378" fg:w="31"/><text x="96.6398%" y="303.50"></text></g><g><title>rucene::core::index::writer::doc_consumer::DocConsumer&lt;D,C,MS,MP&gt;::process_document (31 samples, 0.03%)</title><rect x="96.3898%" y="277" width="0.0331%" height="15" fill="rgb(243,137,7)" fg:x="90378" fg:w="31"/><text x="96.6398%" y="287.50"></text></g><g><title>rucene::core::index::writer::doc_consumer::DocConsumer&lt;D,C,MS,MP&gt;::get_or_add_field (31 samples, 0.03%)</title><rect x="96.3898%" y="261" width="0.0331%" height="15" fill="rgb(230,79,13)" fg:x="90378" fg:w="31"/><text x="96.6398%" y="271.50"></text></g><g><title>rucene::core::codec::field_infos::FieldInfosBuilder&lt;T&gt;::get_or_add (10 samples, 0.01%)</title><rect x="96.4122%" y="245" width="0.0107%" height="15" fill="rgb(247,105,23)" fg:x="90399" fg:w="10"/><text x="96.6622%" y="255.50"></text></g><g><title>rucene::core::index::reader::directory_reader::StandardDirectoryReader&lt;D,C,MS,MP&gt;::open_by_writer (10 samples, 0.01%)</title><rect x="96.4272%" y="405" width="0.0107%" height="15" fill="rgb(223,179,41)" fg:x="90413" fg:w="10"/><text x="96.6772%" y="415.50"></text></g><g><title>rucene::core::index::writer::index_writer::ReadersAndUpdates&lt;D,C,MS,MP&gt;::get_readonly_clone (10 samples, 0.01%)</title><rect x="96.4272%" y="389" width="0.0107%" height="15" fill="rgb(218,9,34)" fg:x="90413" fg:w="10"/><text x="96.6772%" y="399.50"></text></g><g><title>rucene::core::index::writer::index_writer::ReadersAndUpdatesInner&lt;D,C,MS,MP&gt;::get_readonly_clone (10 samples, 0.01%)</title><rect x="96.4272%" y="373" width="0.0107%" height="15" fill="rgb(222,106,8)" fg:x="90413" fg:w="10"/><text x="96.6772%" y="383.50"></text></g><g><title>rucene::core::index::writer::index_writer::ReadersAndUpdatesInner&lt;D,C,MS,MP&gt;::create_reader_if_not_exist (10 samples, 0.01%)</title><rect x="96.4272%" y="357" width="0.0107%" height="15" fill="rgb(211,220,0)" fg:x="90413" fg:w="10"/><text x="96.6772%" y="367.50"></text></g><g><title>rucene::core::index::reader::segment_reader::SegmentReader&lt;D,C&gt;::open (10 samples, 0.01%)</title><rect x="96.4272%" y="341" width="0.0107%" height="15" fill="rgb(229,52,16)" fg:x="90413" fg:w="10"/><text x="96.6772%" y="351.50"></text></g><g><title>rucene::core::index::reader::segment_reader::SegmentReader&lt;D,C&gt;::new (10 samples, 0.01%)</title><rect x="96.4272%" y="325" width="0.0107%" height="15" fill="rgb(212,155,18)" fg:x="90413" fg:w="10"/><text x="96.6772%" y="335.50"></text></g><g><title>rucene::core::index::reader::segment_reader::SegmentReader&lt;D,C&gt;::get_dv_producer (10 samples, 0.01%)</title><rect x="96.4272%" y="309" width="0.0107%" height="15" fill="rgb(242,21,14)" fg:x="90413" fg:w="10"/><text x="96.6772%" y="319.50"></text></g><g><title>rucene::core::index::reader::segment_reader::SegmentDocValues::get_dv_producer (10 samples, 0.01%)</title><rect x="96.4272%" y="293" width="0.0107%" height="15" fill="rgb(222,19,48)" fg:x="90413" fg:w="10"/><text x="96.6772%" y="303.50"></text></g><g><title>&lt;rucene::core::codec::doc_values::doc_values_format::DocValuesFormatEnum as rucene::core::codec::doc_values::doc_values_format::DocValuesFormat&gt;::fields_producer (10 samples, 0.01%)</title><rect x="96.4272%" y="277" width="0.0107%" height="15" fill="rgb(232,45,27)" fg:x="90413" fg:w="10"/><text x="96.6772%" y="287.50"></text></g><g><title>&lt;rucene::core::codec::doc_values::doc_values_format::DocValuesFormatEnum as rucene::core::codec::doc_values::doc_values_format::DocValuesFormat&gt;::fields_producer (10 samples, 0.01%)</title><rect x="96.4272%" y="261" width="0.0107%" height="15" fill="rgb(249,103,42)" fg:x="90413" fg:w="10"/><text x="96.6772%" y="271.50"></text></g><g><title>&lt;rucene::core::codec::doc_values::lucene54::lucene54_doc_values_format::Lucene54DocValuesFormat as rucene::core::codec::doc_values::doc_values_format::DocValuesFormat&gt;::fields_producer (10 samples, 0.01%)</title><rect x="96.4272%" y="245" width="0.0107%" height="15" fill="rgb(246,81,33)" fg:x="90413" fg:w="10"/><text x="96.6772%" y="255.50"></text></g><g><title>rucene::core::codec::doc_values::lucene54::lucene54_doc_values_producer::Lucene54DocValuesProducer::new (10 samples, 0.01%)</title><rect x="96.4272%" y="229" width="0.0107%" height="15" fill="rgb(252,33,42)" fg:x="90413" fg:w="10"/><text x="96.6772%" y="239.50"></text></g><g><title>rucene::core::util::bkd::doc_ids_writer::DocIdsWriter::write_doc_ids (224 samples, 0.24%)</title><rect x="96.5359%" y="277" width="0.2389%" height="15" fill="rgb(209,212,41)" fg:x="90515" fg:w="224"/><text x="96.7859%" y="287.50"></text></g><g><title>std::io::Write::write_all (203 samples, 0.22%)</title><rect x="96.5583%" y="261" width="0.2165%" height="15" fill="rgb(207,154,6)" fg:x="90536" fg:w="203"/><text x="96.8083%" y="271.50"></text></g><g><title>&lt;rucene::core::store::io::growable_byte_array_output::GrowableByteArrayDataOutput as std::io::Write&gt;::write (131 samples, 0.14%)</title><rect x="96.6351%" y="245" width="0.1397%" height="15" fill="rgb(223,64,47)" fg:x="90608" fg:w="131"/><text x="96.8851%" y="255.50"></text></g><g><title>__memmove_avx_unaligned_erms (17 samples, 0.02%)</title><rect x="96.7567%" y="229" width="0.0181%" height="15" fill="rgb(211,161,38)" fg:x="90722" fg:w="17"/><text x="97.0067%" y="239.50"></text></g><g><title>ext4_da_write_begin (17 samples, 0.02%)</title><rect x="96.8228%" y="69" width="0.0181%" height="15" fill="rgb(219,138,40)" fg:x="90784" fg:w="17"/><text x="97.0728%" y="79.50"></text></g><g><title>grab_cache_page_write_begin (10 samples, 0.01%)</title><rect x="96.8303%" y="53" width="0.0107%" height="15" fill="rgb(241,228,46)" fg:x="90791" fg:w="10"/><text x="97.0803%" y="63.50"></text></g><g><title>pagecache_get_page (10 samples, 0.01%)</title><rect x="96.8303%" y="37" width="0.0107%" height="15" fill="rgb(223,209,38)" fg:x="90791" fg:w="10"/><text x="97.0803%" y="47.50"></text></g><g><title>generic_write_end (18 samples, 0.02%)</title><rect x="96.8410%" y="69" width="0.0192%" height="15" fill="rgb(236,164,45)" fg:x="90801" fg:w="18"/><text x="97.0910%" y="79.50"></text></g><g><title>__mark_inode_dirty (13 samples, 0.01%)</title><rect x="96.8463%" y="53" width="0.0139%" height="15" fill="rgb(231,15,5)" fg:x="90806" fg:w="13"/><text x="97.0963%" y="63.50"></text></g><g><title>ext4_dirty_inode (10 samples, 0.01%)</title><rect x="96.8495%" y="37" width="0.0107%" height="15" fill="rgb(252,35,15)" fg:x="90809" fg:w="10"/><text x="97.0995%" y="47.50"></text></g><g><title>generic_perform_write (46 samples, 0.05%)</title><rect x="96.8228%" y="85" width="0.0491%" height="15" fill="rgb(248,181,18)" fg:x="90784" fg:w="46"/><text x="97.0728%" y="95.50"></text></g><g><title>iov_iter_copy_from_user_atomic (11 samples, 0.01%)</title><rect x="96.8602%" y="69" width="0.0117%" height="15" fill="rgb(233,39,42)" fg:x="90819" fg:w="11"/><text x="97.1102%" y="79.50"></text></g><g><title>copy_user_enhanced_fast_string (11 samples, 0.01%)</title><rect x="96.8602%" y="53" width="0.0117%" height="15" fill="rgb(238,110,33)" fg:x="90819" fg:w="11"/><text x="97.1102%" y="63.50"></text></g><g><title>new_sync_write (47 samples, 0.05%)</title><rect x="96.8228%" y="117" width="0.0501%" height="15" fill="rgb(233,195,10)" fg:x="90784" fg:w="47"/><text x="97.0728%" y="127.50"></text></g><g><title>ext4_buffered_write_iter (47 samples, 0.05%)</title><rect x="96.8228%" y="101" width="0.0501%" height="15" fill="rgb(254,105,3)" fg:x="90784" fg:w="47"/><text x="97.0728%" y="111.50"></text></g><g><title>do_syscall_64 (49 samples, 0.05%)</title><rect x="96.8218%" y="165" width="0.0523%" height="15" fill="rgb(221,225,9)" fg:x="90783" fg:w="49"/><text x="97.0718%" y="175.50"></text></g><g><title>ksys_write (49 samples, 0.05%)</title><rect x="96.8218%" y="149" width="0.0523%" height="15" fill="rgb(224,227,45)" fg:x="90783" fg:w="49"/><text x="97.0718%" y="159.50"></text></g><g><title>vfs_write (48 samples, 0.05%)</title><rect x="96.8228%" y="133" width="0.0512%" height="15" fill="rgb(229,198,43)" fg:x="90784" fg:w="48"/><text x="97.0728%" y="143.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (51 samples, 0.05%)</title><rect x="96.8218%" y="181" width="0.0544%" height="15" fill="rgb(206,209,35)" fg:x="90783" fg:w="51"/><text x="97.0718%" y="191.50"></text></g><g><title>&lt;rucene::core::store::io::fs_index_output::FSIndexOutput as std::io::Write&gt;::write (60 samples, 0.06%)</title><rect x="96.8154%" y="261" width="0.0640%" height="15" fill="rgb(245,195,53)" fg:x="90777" fg:w="60"/><text x="97.0654%" y="271.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::write_cold (59 samples, 0.06%)</title><rect x="96.8164%" y="245" width="0.0629%" height="15" fill="rgb(240,92,26)" fg:x="90778" fg:w="59"/><text x="97.0664%" y="255.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::flush_buf (56 samples, 0.06%)</title><rect x="96.8196%" y="229" width="0.0597%" height="15" fill="rgb(207,40,23)" fg:x="90781" fg:w="56"/><text x="97.0696%" y="239.50"></text></g><g><title>&lt;std::process::ChildStdin as std::io::Write&gt;::write (56 samples, 0.06%)</title><rect x="96.8196%" y="213" width="0.0597%" height="15" fill="rgb(223,111,35)" fg:x="90781" fg:w="56"/><text x="97.0696%" y="223.50"></text></g><g><title>__libc_write (56 samples, 0.06%)</title><rect x="96.8196%" y="197" width="0.0597%" height="15" fill="rgb(229,147,28)" fg:x="90781" fg:w="56"/><text x="97.0696%" y="207.50"></text></g><g><title>&lt;rucene::core::codec::points::point_values_writer::TempMutablePointsReader as rucene::core::codec::points::point_values::PointValues&gt;::intersect (467 samples, 0.50%)</title><rect x="96.4432%" y="325" width="0.4981%" height="15" fill="rgb(211,29,28)" fg:x="90428" fg:w="467"/><text x="96.6932%" y="335.50"></text></g><g><title>&lt;rucene::core::util::bkd::bkd_writer::OneDimIntersectVisitor&lt;D,O&gt; as rucene::core::codec::points::point_values::IntersectVisitor&gt;::visit_by_packed_value (467 samples, 0.50%)</title><rect x="96.4432%" y="309" width="0.4981%" height="15" fill="rgb(228,72,33)" fg:x="90428" fg:w="467"/><text x="96.6932%" y="319.50"></text></g><g><title>rucene::core::util::bkd::bkd_writer::OneDimensionBKDWriter&lt;D,O&gt;::write_leaf_block (467 samples, 0.50%)</title><rect x="96.4432%" y="293" width="0.4981%" height="15" fill="rgb(205,214,31)" fg:x="90428" fg:w="467"/><text x="96.6932%" y="303.50"></text></g><g><title>std::io::Write::write_all (156 samples, 0.17%)</title><rect x="96.7748%" y="277" width="0.1664%" height="15" fill="rgb(224,111,15)" fg:x="90739" fg:w="156"/><text x="97.0248%" y="287.50"></text></g><g><title>&lt;rucene::core::store::io::growable_byte_array_output::GrowableByteArrayDataOutput as std::io::Write&gt;::write (58 samples, 0.06%)</title><rect x="96.8794%" y="261" width="0.0619%" height="15" fill="rgb(253,21,26)" fg:x="90837" fg:w="58"/><text x="97.1294%" y="271.50"></text></g><g><title>__memmove_avx_unaligned_erms (13 samples, 0.01%)</title><rect x="96.9274%" y="245" width="0.0139%" height="15" fill="rgb(245,139,43)" fg:x="90882" fg:w="13"/><text x="97.1774%" y="255.50"></text></g><g><title>_int_free (69 samples, 0.07%)</title><rect x="96.9498%" y="261" width="0.0736%" height="15" fill="rgb(252,170,7)" fg:x="90903" fg:w="69"/><text x="97.1998%" y="271.50"></text></g><g><title>__calloc (175 samples, 0.19%)</title><rect x="97.0233%" y="245" width="0.1866%" height="15" fill="rgb(231,118,14)" fg:x="90972" fg:w="175"/><text x="97.2733%" y="255.50"></text></g><g><title>_int_malloc (64 samples, 0.07%)</title><rect x="97.1417%" y="229" width="0.0683%" height="15" fill="rgb(238,83,0)" fg:x="91083" fg:w="64"/><text x="97.3917%" y="239.50"></text></g><g><title>rucene::core::util::bkd::UtilMSBIntroSorter&lt;P&gt;::new (176 samples, 0.19%)</title><rect x="97.0233%" y="261" width="0.1877%" height="15" fill="rgb(221,39,39)" fg:x="90972" fg:w="176"/><text x="97.2733%" y="271.50"></text></g><g><title>&lt;rucene::core::codec::points::point_values_writer::TempMutablePointsReader as rucene::core::codec::points::MutablePointsReader&gt;::doc_id (185 samples, 0.20%)</title><rect x="97.2601%" y="245" width="0.1973%" height="15" fill="rgb(222,119,46)" fg:x="91194" fg:w="185"/><text x="97.5101%" y="255.50"></text></g><g><title>&lt;rucene::core::codec::points::point_values_writer::TempMutablePointsReader as rucene::core::codec::points::MutablePointsReader&gt;::swap (11 samples, 0.01%)</title><rect x="97.4574%" y="245" width="0.0117%" height="15" fill="rgb(222,165,49)" fg:x="91379" fg:w="11"/><text x="97.7074%" y="255.50"></text></g><g><title>&lt;rucene::core::codec::points::point_values_writer::TempMutablePointsReader as rucene::core::codec::points::MutablePointsReader&gt;::value (46 samples, 0.05%)</title><rect x="97.4692%" y="245" width="0.0491%" height="15" fill="rgb(219,113,52)" fg:x="91390" fg:w="46"/><text x="97.7192%" y="255.50"></text></g><g><title>__memcmp_avx2_movbe (15 samples, 0.02%)</title><rect x="97.5182%" y="245" width="0.0160%" height="15" fill="rgb(214,7,15)" fg:x="91436" fg:w="15"/><text x="97.7682%" y="255.50"></text></g><g><title>__memmove_avx_unaligned_erms (42 samples, 0.04%)</title><rect x="97.5342%" y="245" width="0.0448%" height="15" fill="rgb(235,32,4)" fg:x="91451" fg:w="42"/><text x="97.7842%" y="255.50"></text></g><g><title>rucene::core::index::writer::doc_writer::DocumentsWriter&lt;D,C,MS,MP&gt;::do_flush (1,133 samples, 1.21%)</title><rect x="96.4421%" y="405" width="1.2084%" height="15" fill="rgb(238,90,54)" fg:x="90427" fg:w="1133"/><text x="96.6921%" y="415.50"></text></g><g><title>rucene::core::index::writer::doc_writer_per_thread::DocumentsWriterPerThread&lt;D,C,MS,MP&gt;::flush (1,133 samples, 1.21%)</title><rect x="96.4421%" y="389" width="1.2084%" height="15" fill="rgb(213,208,19)" fg:x="90427" fg:w="1133"/><text x="96.6921%" y="399.50"></text></g><g><title>rucene::core::index::writer::doc_consumer::DocConsumer&lt;D,C,MS,MP&gt;::flush (1,133 samples, 1.21%)</title><rect x="96.4421%" y="373" width="1.2084%" height="15" fill="rgb(233,156,4)" fg:x="90427" fg:w="1133"/><text x="96.6921%" y="383.50"></text></g><g><title>rucene::core::codec::points::point_values_writer::PointValuesWriter::flush (1,132 samples, 1.21%)</title><rect x="96.4432%" y="357" width="1.2073%" height="15" fill="rgb(207,194,5)" fg:x="90428" fg:w="1132"/><text x="96.6932%" y="367.50"></text></g><g><title>rucene::core::util::bkd::bkd_writer::BKDWriter&lt;D&gt;::write_field (1,132 samples, 1.21%)</title><rect x="96.4432%" y="341" width="1.2073%" height="15" fill="rgb(206,111,30)" fg:x="90428" fg:w="1132"/><text x="96.6932%" y="351.50"></text></g><g><title>rucene::core::util::bkd::MutablePointsReaderUtils::sort (665 samples, 0.71%)</title><rect x="96.9412%" y="325" width="0.7092%" height="15" fill="rgb(243,70,54)" fg:x="90895" fg:w="665"/><text x="97.1912%" y="335.50"></text></g><g><title>rucene::core::util::sorter::MSBRadixSorter&lt;T&gt;::radix_sort (665 samples, 0.71%)</title><rect x="96.9412%" y="309" width="0.7092%" height="15" fill="rgb(242,28,8)" fg:x="90895" fg:w="665"/><text x="97.1912%" y="319.50"></text></g><g><title>rucene::core::util::sorter::MSBRadixSorter&lt;T&gt;::radix_sort (665 samples, 0.71%)</title><rect x="96.9412%" y="293" width="0.7092%" height="15" fill="rgb(219,106,18)" fg:x="90895" fg:w="665"/><text x="97.1912%" y="303.50"></text></g><g><title>rucene::core::util::sorter::MSBRadixSorter&lt;T&gt;::radix_sort (665 samples, 0.71%)</title><rect x="96.9412%" y="277" width="0.7092%" height="15" fill="rgb(244,222,10)" fg:x="90895" fg:w="665"/><text x="97.1912%" y="287.50"></text></g><g><title>rucene::core::util::sorter::Sorter::quick_sort (412 samples, 0.44%)</title><rect x="97.2111%" y="261" width="0.4394%" height="15" fill="rgb(236,179,52)" fg:x="91148" fg:w="412"/><text x="97.4611%" y="271.50"></text></g><g><title>rucene::core::util::byte_block_pool::ByteBlockPool::read_bytes (67 samples, 0.07%)</title><rect x="97.5790%" y="245" width="0.0715%" height="15" fill="rgb(213,23,39)" fg:x="91493" fg:w="67"/><text x="97.8290%" y="255.50"></text></g><g><title>&lt;rucene::core::codec::doc_values::doc_values_writer::BinaryBytesIterator as core::iter::traits::iterator::Iterator&gt;::next (154 samples, 0.16%)</title><rect x="97.6686%" y="293" width="0.1642%" height="15" fill="rgb(238,48,10)" fg:x="91577" fg:w="154"/><text x="97.9186%" y="303.50"></text></g><g><title>crc32fast::Hasher::update (160 samples, 0.17%)</title><rect x="97.9224%" y="261" width="0.1706%" height="15" fill="rgb(251,196,23)" fg:x="91815" fg:w="160"/><text x="98.1724%" y="271.50"></text></g><g><title>crc32fast::baseline::update_fast_16 (151 samples, 0.16%)</title><rect x="97.9320%" y="245" width="0.1610%" height="15" fill="rgb(250,152,24)" fg:x="91824" fg:w="151"/><text x="98.1820%" y="255.50"></text></g><g><title>ext4_da_write_begin (19 samples, 0.02%)</title><rect x="98.1037%" y="85" width="0.0203%" height="15" fill="rgb(209,150,17)" fg:x="91985" fg:w="19"/><text x="98.3537%" y="95.50"></text></g><g><title>grab_cache_page_write_begin (10 samples, 0.01%)</title><rect x="98.1133%" y="69" width="0.0107%" height="15" fill="rgb(234,202,34)" fg:x="91994" fg:w="10"/><text x="98.3633%" y="79.50"></text></g><g><title>pagecache_get_page (10 samples, 0.01%)</title><rect x="98.1133%" y="53" width="0.0107%" height="15" fill="rgb(253,148,53)" fg:x="91994" fg:w="10"/><text x="98.3633%" y="63.50"></text></g><g><title>generic_write_end (17 samples, 0.02%)</title><rect x="98.1251%" y="85" width="0.0181%" height="15" fill="rgb(218,129,16)" fg:x="92005" fg:w="17"/><text x="98.3751%" y="95.50"></text></g><g><title>iov_iter_copy_from_user_atomic (16 samples, 0.02%)</title><rect x="98.1432%" y="85" width="0.0171%" height="15" fill="rgb(216,85,19)" fg:x="92022" fg:w="16"/><text x="98.3932%" y="95.50"></text></g><g><title>copy_user_enhanced_fast_string (16 samples, 0.02%)</title><rect x="98.1432%" y="69" width="0.0171%" height="15" fill="rgb(235,228,7)" fg:x="92022" fg:w="16"/><text x="98.3932%" y="79.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (55 samples, 0.06%)</title><rect x="98.1027%" y="197" width="0.0587%" height="15" fill="rgb(245,175,0)" fg:x="91984" fg:w="55"/><text x="98.3527%" y="207.50"></text></g><g><title>do_syscall_64 (55 samples, 0.06%)</title><rect x="98.1027%" y="181" width="0.0587%" height="15" fill="rgb(208,168,36)" fg:x="91984" fg:w="55"/><text x="98.3527%" y="191.50"></text></g><g><title>ksys_write (55 samples, 0.06%)</title><rect x="98.1027%" y="165" width="0.0587%" height="15" fill="rgb(246,171,24)" fg:x="91984" fg:w="55"/><text x="98.3527%" y="175.50"></text></g><g><title>vfs_write (54 samples, 0.06%)</title><rect x="98.1037%" y="149" width="0.0576%" height="15" fill="rgb(215,142,24)" fg:x="91985" fg:w="54"/><text x="98.3537%" y="159.50"></text></g><g><title>new_sync_write (54 samples, 0.06%)</title><rect x="98.1037%" y="133" width="0.0576%" height="15" fill="rgb(250,187,7)" fg:x="91985" fg:w="54"/><text x="98.3537%" y="143.50"></text></g><g><title>ext4_buffered_write_iter (54 samples, 0.06%)</title><rect x="98.1037%" y="117" width="0.0576%" height="15" fill="rgb(228,66,33)" fg:x="91985" fg:w="54"/><text x="98.3537%" y="127.50"></text></g><g><title>generic_perform_write (54 samples, 0.06%)</title><rect x="98.1037%" y="101" width="0.0576%" height="15" fill="rgb(234,215,21)" fg:x="91985" fg:w="54"/><text x="98.3537%" y="111.50"></text></g><g><title>&lt;rucene::core::codec::doc_values::doc_values_format::DocValuesConsumerEnum&lt;D,DW,C&gt; as rucene::core::codec::doc_values::doc_values_consumer::DocValuesConsumer&gt;::add_binary_field (480 samples, 0.51%)</title><rect x="97.6505%" y="341" width="0.5119%" height="15" fill="rgb(222,191,20)" fg:x="91560" fg:w="480"/><text x="97.9005%" y="351.50"></text></g><g><title>&lt;rucene::core::codec::doc_values::doc_values_format::DocValuesConsumerEnum&lt;D,DW,C&gt; as rucene::core::codec::doc_values::doc_values_consumer::DocValuesConsumer&gt;::add_binary_field (480 samples, 0.51%)</title><rect x="97.6505%" y="325" width="0.5119%" height="15" fill="rgb(245,79,54)" fg:x="91560" fg:w="480"/><text x="97.9005%" y="335.50"></text></g><g><title>&lt;rucene::core::codec::doc_values::lucene54::lucene54_doc_values_consumer::Lucene54DocValuesConsumer&lt;O&gt; as rucene::core::codec::doc_values::doc_values_consumer::DocValuesConsumer&gt;::add_binary_field (480 samples, 0.51%)</title><rect x="97.6505%" y="309" width="0.5119%" height="15" fill="rgb(240,10,37)" fg:x="91560" fg:w="480"/><text x="97.9005%" y="319.50"></text></g><g><title>std::io::Write::write_all (309 samples, 0.33%)</title><rect x="97.8328%" y="293" width="0.3296%" height="15" fill="rgb(214,192,32)" fg:x="91731" fg:w="309"/><text x="98.0828%" y="303.50"></text></g><g><title>&lt;rucene::core::store::io::fs_index_output::FSIndexOutput as std::io::Write&gt;::write (261 samples, 0.28%)</title><rect x="97.8840%" y="277" width="0.2784%" height="15" fill="rgb(209,36,54)" fg:x="91779" fg:w="261"/><text x="98.1340%" y="287.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::write_cold (61 samples, 0.07%)</title><rect x="98.0973%" y="261" width="0.0651%" height="15" fill="rgb(220,10,11)" fg:x="91979" fg:w="61"/><text x="98.3473%" y="271.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::flush_buf (60 samples, 0.06%)</title><rect x="98.0984%" y="245" width="0.0640%" height="15" fill="rgb(221,106,17)" fg:x="91980" fg:w="60"/><text x="98.3484%" y="255.50"></text></g><g><title>&lt;std::process::ChildStdin as std::io::Write&gt;::write (59 samples, 0.06%)</title><rect x="98.0995%" y="229" width="0.0629%" height="15" fill="rgb(251,142,44)" fg:x="91981" fg:w="59"/><text x="98.3495%" y="239.50"></text></g><g><title>__libc_write (58 samples, 0.06%)</title><rect x="98.1005%" y="213" width="0.0619%" height="15" fill="rgb(238,13,15)" fg:x="91982" fg:w="58"/><text x="98.3505%" y="223.50"></text></g><g><title>_int_free (10 samples, 0.01%)</title><rect x="98.1645%" y="341" width="0.0107%" height="15" fill="rgb(208,107,27)" fg:x="92042" fg:w="10"/><text x="98.4145%" y="351.50"></text></g><g><title>systrim.isra.2.constprop.11 (10 samples, 0.01%)</title><rect x="98.1645%" y="325" width="0.0107%" height="15" fill="rgb(205,136,37)" fg:x="92042" fg:w="10"/><text x="98.4145%" y="335.50"></text></g><g><title>__GI___default_morecore (10 samples, 0.01%)</title><rect x="98.1645%" y="309" width="0.0107%" height="15" fill="rgb(250,205,27)" fg:x="92042" fg:w="10"/><text x="98.4145%" y="319.50"></text></g><g><title>__GI___sbrk (10 samples, 0.01%)</title><rect x="98.1645%" y="293" width="0.0107%" height="15" fill="rgb(210,80,43)" fg:x="92042" fg:w="10"/><text x="98.4145%" y="303.50"></text></g><g><title>__brk (10 samples, 0.01%)</title><rect x="98.1645%" y="277" width="0.0107%" height="15" fill="rgb(247,160,36)" fg:x="92042" fg:w="10"/><text x="98.4145%" y="287.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (10 samples, 0.01%)</title><rect x="98.1645%" y="261" width="0.0107%" height="15" fill="rgb(234,13,49)" fg:x="92042" fg:w="10"/><text x="98.4145%" y="271.50"></text></g><g><title>do_syscall_64 (10 samples, 0.01%)</title><rect x="98.1645%" y="245" width="0.0107%" height="15" fill="rgb(234,122,0)" fg:x="92042" fg:w="10"/><text x="98.4145%" y="255.50"></text></g><g><title>__do_sys_brk (10 samples, 0.01%)</title><rect x="98.1645%" y="229" width="0.0107%" height="15" fill="rgb(207,146,38)" fg:x="92042" fg:w="10"/><text x="98.4145%" y="239.50"></text></g><g><title>__do_munmap (10 samples, 0.01%)</title><rect x="98.1645%" y="213" width="0.0107%" height="15" fill="rgb(207,177,25)" fg:x="92042" fg:w="10"/><text x="98.4145%" y="223.50"></text></g><g><title>unmap_region (10 samples, 0.01%)</title><rect x="98.1645%" y="197" width="0.0107%" height="15" fill="rgb(211,178,42)" fg:x="92042" fg:w="10"/><text x="98.4145%" y="207.50"></text></g><g><title>asm_exc_page_fault (29 samples, 0.03%)</title><rect x="98.1848%" y="309" width="0.0309%" height="15" fill="rgb(230,69,54)" fg:x="92061" fg:w="29"/><text x="98.4348%" y="319.50"></text></g><g><title>exc_page_fault (26 samples, 0.03%)</title><rect x="98.1880%" y="293" width="0.0277%" height="15" fill="rgb(214,135,41)" fg:x="92064" fg:w="26"/><text x="98.4380%" y="303.50"></text></g><g><title>do_user_addr_fault (25 samples, 0.03%)</title><rect x="98.1891%" y="277" width="0.0267%" height="15" fill="rgb(237,67,25)" fg:x="92065" fg:w="25"/><text x="98.4391%" y="287.50"></text></g><g><title>handle_mm_fault (25 samples, 0.03%)</title><rect x="98.1891%" y="261" width="0.0267%" height="15" fill="rgb(222,189,50)" fg:x="92065" fg:w="25"/><text x="98.4391%" y="271.50"></text></g><g><title>__handle_mm_fault (25 samples, 0.03%)</title><rect x="98.1891%" y="245" width="0.0267%" height="15" fill="rgb(245,148,34)" fg:x="92065" fg:w="25"/><text x="98.4391%" y="255.50"></text></g><g><title>do_anonymous_page (25 samples, 0.03%)</title><rect x="98.1891%" y="229" width="0.0267%" height="15" fill="rgb(222,29,6)" fg:x="92065" fg:w="25"/><text x="98.4391%" y="239.50"></text></g><g><title>rucene::core::codec::points::point_values_writer::TempMutablePointsReader::new (39 samples, 0.04%)</title><rect x="98.1763%" y="325" width="0.0416%" height="15" fill="rgb(221,189,43)" fg:x="92053" fg:w="39"/><text x="98.4263%" y="335.50"></text></g><g><title>&lt;rucene::core::codec::points::point_values_writer::TempMutablePointsReader as rucene::core::codec::points::MutablePointsReader&gt;::doc_id (56 samples, 0.06%)</title><rect x="98.2317%" y="293" width="0.0597%" height="15" fill="rgb(207,36,27)" fg:x="92105" fg:w="56"/><text x="98.4817%" y="303.50"></text></g><g><title>&lt;rucene::core::codec::points::point_values_writer::TempMutablePointsReader as rucene::core::codec::points::MutablePointsReader&gt;::value (36 samples, 0.04%)</title><rect x="98.2914%" y="293" width="0.0384%" height="15" fill="rgb(217,90,24)" fg:x="92161" fg:w="36"/><text x="98.5414%" y="303.50"></text></g><g><title>&lt;rucene::core::util::bkd::bkd_writer::OneDimIntersectVisitor&lt;D,O&gt; as rucene::core::codec::points::point_values::IntersectVisitor&gt;::visit_by_packed_value (88 samples, 0.09%)</title><rect x="98.3298%" y="293" width="0.0939%" height="15" fill="rgb(224,66,35)" fg:x="92197" fg:w="88"/><text x="98.5798%" y="303.50"></text></g><g><title>__memmove_avx_unaligned_erms (20 samples, 0.02%)</title><rect x="98.4024%" y="277" width="0.0213%" height="15" fill="rgb(221,13,50)" fg:x="92265" fg:w="20"/><text x="98.6524%" y="287.50"></text></g><g><title>__memmove_avx_unaligned_erms (187 samples, 0.20%)</title><rect x="98.4237%" y="293" width="0.1994%" height="15" fill="rgb(236,68,49)" fg:x="92285" fg:w="187"/><text x="98.6737%" y="303.50"></text></g><g><title>&lt;rucene::core::codec::points::point_values_writer::TempMutablePointsReader as rucene::core::codec::points::point_values::PointValues&gt;::intersect (416 samples, 0.44%)</title><rect x="98.2178%" y="309" width="0.4437%" height="15" fill="rgb(229,146,28)" fg:x="92092" fg:w="416"/><text x="98.4678%" y="319.50"></text></g><g><title>rucene::core::util::byte_block_pool::ByteBlockPool::read_bytes (36 samples, 0.04%)</title><rect x="98.6231%" y="293" width="0.0384%" height="15" fill="rgb(225,31,38)" fg:x="92472" fg:w="36"/><text x="98.8731%" y="303.50"></text></g><g><title>&lt;rucene::core::codec::points::point_values_writer::TempMutablePointsReader as rucene::core::codec::points::MutablePointsReader&gt;::byte_at (185 samples, 0.20%)</title><rect x="98.7884%" y="277" width="0.1973%" height="15" fill="rgb(250,208,3)" fg:x="92627" fg:w="185"/><text x="99.0384%" y="287.50"></text></g><g><title>&lt;rucene::core::codec::points::point_values_writer::TempMutablePointsReader as rucene::core::codec::points::MutablePointsReader&gt;::swap (23 samples, 0.02%)</title><rect x="98.9857%" y="277" width="0.0245%" height="15" fill="rgb(246,54,23)" fg:x="92812" fg:w="23"/><text x="99.2357%" y="287.50"></text></g><g><title>&lt;rucene::core::codec::points::point_values_writer::TempMutablePointsReader as rucene::core::codec::points::MutablePointsReader&gt;::byte_at (278 samples, 0.30%)</title><rect x="99.0668%" y="261" width="0.2965%" height="15" fill="rgb(243,76,11)" fg:x="92888" fg:w="278"/><text x="99.3168%" y="271.50"></text></g><g><title>&lt;rucene::core::codec::points::point_values_writer::TempMutablePointsReader as rucene::core::codec::points::MutablePointsReader&gt;::swap (95 samples, 0.10%)</title><rect x="99.3633%" y="261" width="0.1013%" height="15" fill="rgb(245,21,50)" fg:x="93166" fg:w="95"/><text x="99.6133%" y="271.50"></text></g><g><title>&lt;rucene::core::codec::points::point_values_writer::TempMutablePointsReader as rucene::core::codec::points::MutablePointsReader&gt;::byte_at (282 samples, 0.30%)</title><rect x="99.5734%" y="245" width="0.3008%" height="15" fill="rgb(228,9,43)" fg:x="93363" fg:w="282"/><text x="99.8234%" y="255.50"></text></g><g><title>&lt;rucene::core::codec::points::point_values_writer::TempMutablePointsReader as rucene::core::codec::points::MutablePointsReader&gt;::swap (18 samples, 0.02%)</title><rect x="99.8742%" y="245" width="0.0192%" height="15" fill="rgb(208,100,47)" fg:x="93645" fg:w="18"/><text x="100.1242%" y="255.50"></text></g><g><title>__GI___libc_free (11 samples, 0.01%)</title><rect x="99.8933%" y="245" width="0.0117%" height="15" fill="rgb(232,26,8)" fg:x="93663" fg:w="11"/><text x="100.1433%" y="255.50"></text></g><g><title>_int_free (10 samples, 0.01%)</title><rect x="99.9115%" y="245" width="0.0107%" height="15" fill="rgb(216,166,38)" fg:x="93680" fg:w="10"/><text x="100.1615%" y="255.50"></text></g><g><title>rucene::core::util::bkd::UtilMSBIntroSorter&lt;P&gt;::new (27 samples, 0.03%)</title><rect x="99.9221%" y="245" width="0.0288%" height="15" fill="rgb(251,202,51)" fg:x="93690" fg:w="27"/><text x="100.1721%" y="255.50"></text></g><g><title>rucene::core::util::math::log (16 samples, 0.02%)</title><rect x="99.9509%" y="245" width="0.0171%" height="15" fill="rgb(254,216,34)" fg:x="93717" fg:w="16"/><text x="100.2009%" y="255.50"></text></g><g><title>rucene::core::codec::points::point_values_writer::PointValuesWriter::flush (1,684 samples, 1.80%)</title><rect x="98.1763%" y="341" width="1.7960%" height="15" fill="rgb(251,32,27)" fg:x="92053" fg:w="1684"/><text x="98.4263%" y="351.50">r..</text></g><g><title>rucene::core::util::bkd::bkd_writer::BKDWriter&lt;D&gt;::write_field (1,645 samples, 1.75%)</title><rect x="98.2178%" y="325" width="1.7544%" height="15" fill="rgb(208,127,28)" fg:x="92092" fg:w="1645"/><text x="98.4678%" y="335.50"></text></g><g><title>rucene::core::util::bkd::MutablePointsReaderUtils::sort (1,228 samples, 1.31%)</title><rect x="98.6626%" y="309" width="1.3097%" height="15" fill="rgb(224,137,22)" fg:x="92509" fg:w="1228"/><text x="98.9126%" y="319.50"></text></g><g><title>rucene::core::util::sorter::MSBRadixSorter&lt;T&gt;::radix_sort (1,228 samples, 1.31%)</title><rect x="98.6626%" y="293" width="1.3097%" height="15" fill="rgb(254,70,32)" fg:x="92509" fg:w="1228"/><text x="98.9126%" y="303.50"></text></g><g><title>rucene::core::util::sorter::MSBRadixSorter&lt;T&gt;::radix_sort (902 samples, 0.96%)</title><rect x="99.0103%" y="277" width="0.9620%" height="15" fill="rgb(229,75,37)" fg:x="92835" fg:w="902"/><text x="99.2603%" y="287.50"></text></g><g><title>rucene::core::util::sorter::MSBRadixSorter&lt;T&gt;::radix_sort (476 samples, 0.51%)</title><rect x="99.4646%" y="261" width="0.5077%" height="15" fill="rgb(252,64,23)" fg:x="93261" fg:w="476"/><text x="99.7146%" y="271.50"></text></g><g><title>rucene::core::index::writer::doc_writer::DocumentsWriter&lt;D,C,MS,MP&gt;::flush_all_threads (2,179 samples, 2.32%)</title><rect x="97.6505%" y="405" width="2.3239%" height="15" fill="rgb(232,162,48)" fg:x="91560" fg:w="2179"/><text x="97.9005%" y="415.50">r..</text></g><g><title>rucene::core::index::writer::doc_writer::DocumentsWriter&lt;D,C,MS,MP&gt;::do_flush (2,179 samples, 2.32%)</title><rect x="97.6505%" y="389" width="2.3239%" height="15" fill="rgb(246,160,12)" fg:x="91560" fg:w="2179"/><text x="97.9005%" y="399.50">r..</text></g><g><title>rucene::core::index::writer::doc_writer_per_thread::DocumentsWriterPerThread&lt;D,C,MS,MP&gt;::flush (2,179 samples, 2.32%)</title><rect x="97.6505%" y="373" width="2.3239%" height="15" fill="rgb(247,166,0)" fg:x="91560" fg:w="2179"/><text x="97.9005%" y="383.50">r..</text></g><g><title>rucene::core::index::writer::doc_consumer::DocConsumer&lt;D,C,MS,MP&gt;::flush (2,179 samples, 2.32%)</title><rect x="97.6505%" y="357" width="2.3239%" height="15" fill="rgb(249,219,21)" fg:x="91560" fg:w="2179"/><text x="97.9005%" y="367.50">r..</text></g><g><title>basic_points_ra (93,761 samples, 100.00%)</title><rect x="0.0000%" y="421" width="99.9979%" height="15" fill="rgb(205,209,3)" fg:x="0" fg:w="93761"/><text x="0.2500%" y="431.50">basic_points_ra</text></g><g><title>all (93,763 samples, 100%)</title><rect x="0.0000%" y="437" width="100.0000%" height="15" fill="rgb(243,44,1)" fg:x="0" fg:w="93763"/><text x="0.2500%" y="447.50"></text></g></svg></svg>